name: BrowserStack Cross-Browser Tests

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  browserstack-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Don't cancel other jobs if one fails
      matrix:
        browser:
          - name: "Chrome macOS"
            project: "-latest:OSX Sequoia-browserstack"
          - name: "Firefox macOS"  
            project: "-latest:OSX Sequoia-browserstack"
          - name: "Safari macOS"
            project: "-latest:OSX Sequoia-browserstack"
          - name: "iPhone Safari 16"
            project: "-iPhone 16:18-browserstack-mobile"
          - name: "iPhone Safari 17"
            project: "-iPhone 17:26-browserstack-mobile"
          - name: "Android Chrome 16"
            project: "-Samsung Galaxy S22:16-browserstack-mobile"
          - name: "Android Chrome 15"
            project: "-Samsung Galaxy S22:15-browserstack-mobile"
          - name: "Android Chrome 14"
            project: "-Samsung Galaxy S22:14-browserstack-mobile"
    
    name: "Test on ${{ matrix.browser.name }}"
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: latest
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Install Playwright browsers
      run: pnpm exec playwright install --with-deps
    
    - name: Build application
      run: pnpm run build
    
    - name: Run Playwright Tests on ${{ matrix.browser.name }}
      run: |
        echo "🚀 Testing on ${{ matrix.browser.name }}"
        echo "Build Name: $BROWSERSTACK_BUILD_NAME"
        echo "Username: $BROWSERSTACK_USERNAME"
        echo "Project: ${{ matrix.browser.project }}"
        pnpm exec browserstack-node-sdk playwright test --config=playwright.browserstack.config.js --project="${{ matrix.browser.project }}"
      env:
        CI: true
        BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
        BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
        BROWSERSTACK_BUILD_NAME: "simple-todo-consent-${{ github.sha }}"
        BROWSER_CONFIG: ${{ toJson(matrix.browser) }}
    
    - name: Upload test results for ${{ matrix.browser.name }}
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: results-${{ matrix.browser.name }}
        path: |
          test-results/
          playwright-report/
        retention-days: 30

  # Job to run local tests (fallback and for PR validation)
  # local-tests:
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
    
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '22'
    
  #   - name: Setup pnpm
  #     uses: pnpm/action-setup@v2
  #     with:
  #       version: latest
    
  #   - name: Get pnpm store directory
  #     id: pnpm-cache
  #     shell: bash
  #     run: |
  #       echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
    
  #   - name: Setup pnpm cache
  #     uses: actions/cache@v3
  #     with:
  #       path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
  #       key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
  #       restore-keys: |
  #         ${{ runner.os }}-pnpm-store-
    
  #   - name: Install dependencies
  #     run: pnpm install --frozen-lockfile
    
  #   - name: Install Playwright browsers
  #     run: pnpm exec playwright install --with-deps
    
  #   - name: Build application
  #     run: pnpm run build
    
  #   - name: Run local Playwright tests
  #     run: pnpm exec playwright test
  #     env:
  #       CI: true
    
  #   - name: Upload local test results
  #     uses: actions/upload-artifact@v4
  #     if: always()
  #     with:
  #       name: local-test-results
  #       path: |
  #         test-results/
  #         playwright-report/
  #       retention-days: 30

  # Job to combine and report results
  report-results:
    runs-on: ubuntu-latest
    needs: [browserstack-tests]
    if: always()
    
    steps:
    - name: Download all test results
      uses: actions/download-artifact@v4
      with:
        path: all-results
    
    - name: Report summary
      run: |
        echo "# Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## BrowserStack Tests" >> $GITHUB_STEP_SUMMARY
        
        if [ -d "all-results/browserstack-results" ]; then
          echo "- ✅ BrowserStack tests completed" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ❌ BrowserStack tests failed or not found" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Local Tests" >> $GITHUB_STEP_SUMMARY
        if [ -d "all-results/local-test-results" ]; then
          echo "- ✅ Local tests completed" >> $GITHUB_STEP_SUMMARY
        else
          echo "- ❌ Local tests failed" >> $GITHUB_STEP_SUMMARY
        fi
        
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## Tested Browsers (BrowserStack)" >> $GITHUB_STEP_SUMMARY
        echo "- Chrome on Windows 11, macOS Monterey" >> $GITHUB_STEP_SUMMARY
        echo "- Firefox on Windows 11, macOS Monterey" >> $GITHUB_STEP_SUMMARY
        echo "- Edge on Windows 11" >> $GITHUB_STEP_SUMMARY
        echo "- Safari on macOS Monterey, iPhone 14" >> $GITHUB_STEP_SUMMARY
        echo "- Chrome on Android (Samsung Galaxy S22)" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Note**: All browsers are tested in parallel as defined in browserstack.yml"
