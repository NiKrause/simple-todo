2025-08-19 13:46:42 - [32minfo[39m: Reading configs from /Users/nandi/Documents/projekte/DecentraSol/simple-todo/browserstack.yml
2025-08-19 13:46:42 - [32minfo[39m: Log Directory has been set to /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log
2025-08-19 13:46:42 - [32minfo[39m: Log Directory has been set to /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log
2025-08-19 13:46:42 - [32minfo[39m: Running SDK with args /Users/nandi/.nvm/versions/node/v20.19.4/bin/node /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/browserstack-node-sdk/src/bin/runner.js playwright test e2e/consent-screen.spec.js --config=playwright.browserstack.config.js --dry-run
2025-08-19 13:46:42 - [32minfo[39m: SDK run started with id: 4d0b5079-aded-4563-aba2-1fb00941a705
2025-08-19 13:46:42 - [32minfo[39m: Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
2025-08-19 13:46:42 - [32minfo[39m: Running SDK with args /Users/nandi/.nvm/versions/node/v20.19.4/bin/node /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/browserstack-node-sdk/src/bin/runner.js playwright test e2e/consent-screen.spec.js --config=playwright.browserstack.config.js --dry-run
2025-08-19 13:46:42 - [32minfo[39m: SDK run started with id: 4d0b5079-aded-4563-aba2-1fb00941a705
2025-08-19 13:46:42 - [32minfo[39m: Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
2025-08-19 13:46:43 - [32minfo[39m: [BrowserstackCLI] startMain: Starting main process
2025-08-19 13:46:43 - [32minfo[39m: [BrowserstackCLI] startMain: Starting main process
2025-08-19 13:46:43 - [32minfo[39m: [CLIUtils] Current CLI Path Found: 
2025-08-19 13:46:43 - [32minfo[39m: [CLIUtils] Current CLI Path Found: 
2025-08-19 13:46:43 - [32minfo[39m: [BrowserstackCLI] spawning command=',sdk'
2025-08-19 13:46:43 - [32minfo[39m: [BrowserstackCLI] spawning command=',sdk'
2025-08-19 13:46:43 - [31merror[39m: [BrowserstackCLI] bootstrap: failed to bootstrap=TypeError [ERR_INVALID_ARG_TYPE]: The "file" argument must be of type string. Received null
    at normalizeSpawnArguments (node:child_process:548:3)
    at spawn (node:child_process:755:13)
    at Object.wvLBw (/Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/.pnpm/browserstack-node-sdk@1.41.1_encoding@0.1.13/node_modules/browserstack-node-sdk/src/bin/v2/browserstackCLI.js:1:9242)
    at BrowserstackCLI.start (/Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/.pnpm/browserstack-node-sdk@1.41.1_encoding@0.1.13/node_modules/browserstack-node-sdk/src/bin/v2/browserstackCLI.js:1:10041)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async BrowserstackCLI.startMain (/Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/.pnpm/browserstack-node-sdk@1.41.1_encoding@0.1.13/node_modules/browserstack-node-sdk/src/bin/v2/browserstackCLI.js:1:6568)
    at async BrowserstackCLI.bootstrap (/Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/.pnpm/browserstack-node-sdk@1.41.1_encoding@0.1.13/node_modules/browserstack-node-sdk/src/bin/v2/browserstackCLI.js:1:6037)
    at async /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/.pnpm/browserstack-node-sdk@1.41.1_encoding@0.1.13/node_modules/browserstack-node-sdk/src/bin/playwright/command.js:2:7752
2025-08-19 13:46:43 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 13:46:43 - [31merror[39m: [BrowserstackCLI] bootstrap: failed to bootstrap=TypeError [ERR_INVALID_ARG_TYPE]: The "file" argument must be of type string. Received null
    at normalizeSpawnArguments (node:child_process:548:3)
    at spawn (node:child_process:755:13)
    at Object.wvLBw (/Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/.pnpm/browserstack-node-sdk@1.41.1_encoding@0.1.13/node_modules/browserstack-node-sdk/src/bin/v2/browserstackCLI.js:1:9242)
    at BrowserstackCLI.start (/Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/.pnpm/browserstack-node-sdk@1.41.1_encoding@0.1.13/node_modules/browserstack-node-sdk/src/bin/v2/browserstackCLI.js:1:10041)
    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)
    at async BrowserstackCLI.startMain (/Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/.pnpm/browserstack-node-sdk@1.41.1_encoding@0.1.13/node_modules/browserstack-node-sdk/src/bin/v2/browserstackCLI.js:1:6568)
    at async BrowserstackCLI.bootstrap (/Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/.pnpm/browserstack-node-sdk@1.41.1_encoding@0.1.13/node_modules/browserstack-node-sdk/src/bin/v2/browserstackCLI.js:1:6037)
    at async /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/.pnpm/browserstack-node-sdk@1.41.1_encoding@0.1.13/node_modules/browserstack-node-sdk/src/bin/playwright/command.js:2:7752
2025-08-19 13:46:43 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 13:46:44 - [31merror[39m: Access to BrowserStack denied due to incorrect credentials.
2025-08-19 13:46:44 - [31merror[39m: Access to BrowserStack denied due to incorrect credentials.
2025-08-19 13:46:47 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 13:46:47 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 13:46:47 - [31merror[39m: Error while getting build link. Error: HTTP Basic: Access denied.

2025-08-19 13:46:47 - [31merror[39m: Error while getting build link. Error: HTTP Basic: Access denied.

2025-08-19 13:46:47 - [32minfo[39m: SDK run ended for id: 4d0b5079-aded-4563-aba2-1fb00941a705, testhub id: undefined
2025-08-19 13:46:47 - [32minfo[39m: SDK run ended for id: 4d0b5079-aded-4563-aba2-1fb00941a705, testhub id: undefined
2025-08-19 13:46:48 - [32minfo[39m: Deleting /Users/nandi/Documents/projekte/DecentraSol/simple-todo/playwright-browserstack-sdk.config.cjs
2025-08-19 13:46:48 - [32minfo[39m: Deleting /Users/nandi/Documents/projekte/DecentraSol/simple-todo/playwright-browserstack-sdk.config.cjs
2025-08-19 13:46:48 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 13:46:48 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 13:46:48 - [32minfo[39m: key-metrics.json file not found, skipping processing for event for cli.
2025-08-19 13:46:48 - [32minfo[39m: key-metrics.json file not found, skipping processing for event for cli.
2025-08-19 13:47:51 - [32minfo[39m: Reading configs from /Users/nandi/Documents/projekte/DecentraSol/simple-todo/browserstack.yml
2025-08-19 13:47:51 - [32minfo[39m: Log Directory has been set to /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log
2025-08-19 13:47:51 - [32minfo[39m: Log Directory has been set to /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log
2025-08-19 13:47:51 - [32minfo[39m: Running SDK with args /Users/nandi/.nvm/versions/node/v20.19.4/bin/node /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/browserstack-node-sdk/src/bin/runner.js playwright test e2e/consent-screen.spec.js --config=playwright.browserstack.config.js
2025-08-19 13:47:51 - [32minfo[39m: SDK run started with id: bcedebd4-0934-4bff-bf5d-2211c18bd7ee
2025-08-19 13:47:51 - [32minfo[39m: Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
2025-08-19 13:47:51 - [32minfo[39m: Running SDK with args /Users/nandi/.nvm/versions/node/v20.19.4/bin/node /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/browserstack-node-sdk/src/bin/runner.js playwright test e2e/consent-screen.spec.js --config=playwright.browserstack.config.js
2025-08-19 13:47:51 - [32minfo[39m: SDK run started with id: bcedebd4-0934-4bff-bf5d-2211c18bd7ee
2025-08-19 13:47:51 - [32minfo[39m: Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
2025-08-19 13:47:52 - [32minfo[39m: [BrowserstackCLI] startMain: Starting main process
2025-08-19 13:47:52 - [32minfo[39m: [BrowserstackCLI] startMain: Starting main process
2025-08-19 13:47:52 - [32minfo[39m: [CLIUtils] Current CLI Path Found: 
2025-08-19 13:47:52 - [32minfo[39m: [CLIUtils] Current CLI Path Found: 
2025-08-19 13:47:57 - [32minfo[39m: [BrowserstackCLI] spawning command='/Users/nandi/.browserstack/cli/binary-macos-x64,sdk'
2025-08-19 13:47:57 - [32minfo[39m: [BrowserstackCLI] spawning command='/Users/nandi/.browserstack/cli/binary-macos-x64,sdk'
2025-08-19 13:47:59 - [32minfo[39m: [BrowserstackCLI] CLI params loaded: {"id":"1ac2ace9-e186-4933-aa18-1ec2908265f0","listen":"unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock"}
2025-08-19 13:47:59 - [32minfo[39m: [BrowserstackCLI] CLI params loaded: {"id":"1ac2ace9-e186-4933-aa18-1ec2908265f0","listen":"unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock"}
2025-08-19 13:47:59 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:47:59 - [32minfo[39m: [GrpcClient] Initialized gRPC client with bin session id: 1ac2ace9-e186-4933-aa18-1ec2908265f0 and listen address: unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:47:59 - [32minfo[39m: [GrpcClient] startBinSession: Calling startBinSession
2025-08-19 13:47:59 - [32minfo[39m: [GrpcClient] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"], parsedConfig=[]
2025-08-19 13:47:59 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:47:59 - [32minfo[39m: [GrpcClient] Initialized gRPC client with bin session id: 1ac2ace9-e186-4933-aa18-1ec2908265f0 and listen address: unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:47:59 - [32minfo[39m: [GrpcClient] startBinSession: Calling startBinSession
2025-08-19 13:47:59 - [32minfo[39m: [GrpcClient] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"], parsedConfig=[]
2025-08-19 13:48:00 - [32minfo[39m: [GrpcClient] StartBinSession successful
2025-08-19 13:48:00 - [32minfo[39m: [GrpcClient] StartBinSession successful
2025-08-19 13:48:00 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:48:00 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:00 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:48:00 - [32minfo[39m: [BrowserstackCLI] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"]
2025-08-19 13:48:00 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:48:00 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:00 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:48:00 - [32minfo[39m: [BrowserstackCLI] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"]
2025-08-19 13:48:10 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:10 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:48:10 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:48:11 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:48:11 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:48:11 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:11 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:48:11 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:48:11 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:48:11 - [32minfo[39m: Setting up TestInfo directory at /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log/.obs_test_details-undefined
2025-08-19 13:48:11 - [32minfo[39m: [PlaywrightTestFramework] trackPlaywrightInstance: created instance for target=378:0, state=TestFrameworkState.INIT_TEST
2025-08-19 13:48:11 - [32minfo[39m: [PlaywrightTestFramework] trackPlaywrightInstance: saved instance contextId=1e544d99afa5d19378e95c2cef9aa91f4057cef5208024027a1f90341721cd64 target=378:0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=572:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=58da4921a164c944f3345b03230b64fa9d02fc124e08226a90a54153e6a13497 target=572:0
2025-08-19 13:48:29 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os_version":16,"device":"iPhone 14","real_mobile":true,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"safari","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=570:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=c6ed4037ef1ae782a91f172cf146f03900012b144b78025aa1927a5477526b19 target=570:0
2025-08-19 13:48:29 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=576:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=ccf554e919ddc45d874ec6cf6cd87c9e797c456617566dac1b45fa0f20a6b23e target=576:0
2025-08-19 13:48:29 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=571:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=84a1d859184957dd636b24da4b010338891e3f98127ab4f3418c56ea91e89770 target=571:0
2025-08-19 13:48:29 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=574:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=f8b32941a1e0dc270a69dac6124e47b5c88e0f7532f6454db2e0bc63e0a5e4b1 target=574:0
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=569:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=9a68615cbdf1238f7b6725af5241d0db8d59f3187642c7a2353bd80f97a8bdc3 target=569:0
2025-08-19 13:48:29 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"edge","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=573:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=ee5b784412ad1fa3d917aabe12e2a7bee1eeae1193c72b23a9fb2767463603c6 target=573:0
2025-08-19 13:48:29 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Linux","os_version":"Ubuntu 20.04","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=566:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=75b99712d426e740f05ef794c7b8ad1ee7fc45004fee3831b6eee6eade1b5b2c target=566:0
2025-08-19 13:48:29 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:29 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:29 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=568:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:48:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=42236dfecebaa3ab394d11a28a335bd41656e0f24d7db9007d01032f270d544a target=568:0
2025-08-19 13:48:29 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:48:30 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:30 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:30 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:30 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:30 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:30 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:30 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:30 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:30 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:30 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:30 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:31 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:48:31 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-9cff69de19f133588e7e
2025-08-19 13:48:31 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'ae0b4331-a03a-476d-b33a-2bbe8181b8ae',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'ae0b4331-a03a-476d-b33a-2bbe8181b8ae',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-9cff69de19f133588e7e',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:48:29.553Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Linux Ubuntu 20.04-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 13:48:31 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:48:31 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:48:31 - [32minfo[39m: getting screenshots results.
2025-08-19 13:48:31 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:48:31 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:48:31 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:31 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:48:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:48:33 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-b37db3cf5b716db96e50
2025-08-19 13:48:33 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'e461fa19-d48a-41c1-853e-4146cbe7e0d5',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'e461fa19-d48a-41c1-853e-4146cbe7e0d5',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-b37db3cf5b716db96e50',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:48:29.540Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 13:48:33 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:48:33 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:48:33 - [32minfo[39m: getting screenshots results.
2025-08-19 13:48:33 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:48:33 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:48:33 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:33 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:48:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:48:37 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-a02ab29e91f16711c14a
2025-08-19 13:48:37 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '8083031b-48b7-47f0-9a5b-12890bdbb8c1',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '8083031b-48b7-47f0-9a5b-12890bdbb8c1',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-a02ab29e91f16711c14a',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:48:29.552Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 13:48:37 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:48:37 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:48:37 - [32minfo[39m: getting screenshots results.
2025-08-19 13:48:37 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:48:37 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:48:37 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:37 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:48:39 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:48:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:48:39 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-36ccb61f1811542860a2
2025-08-19 13:48:39 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '167f8592-2cc0-4511-b8a5-d13926aba094',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '167f8592-2cc0-4511-b8a5-d13926aba094',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-36ccb61f1811542860a2',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:48:29.530Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 13:48:39 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:48:39 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:48:39 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:48:39 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-071fc1371fa8ca11bf28
2025-08-19 13:48:39 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'bc49790f-b9fa-44a9-a92e-f1059f488dcc',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'bc49790f-b9fa-44a9-a92e-f1059f488dcc',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-071fc1371fa8ca11bf28',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:48:29.530Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 13:48:39 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:48:39 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:48:39 - [32minfo[39m: getting screenshots results.
2025-08-19 13:48:39 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:48:39 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:48:39 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:48:39 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:39 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:48:40 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-c0c6295118fa82688bd1
2025-08-19 13:48:40 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '6c173f49-7246-488d-8d67-34aabc353591',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '6c173f49-7246-488d-8d67-34aabc353591',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-c0c6295118fa82688bd1',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:48:29.615Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 13:48:40 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:48:40 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:48:40 - [32minfo[39m: getting screenshots results.
2025-08-19 13:48:40 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:48:40 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:40 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:48:40 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:40 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:40 - [32minfo[39m: getting screenshots results.
2025-08-19 13:48:40 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:48:40 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:48:40 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:40 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:41 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:48:41 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:48:41 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-77300ebaccc9eb33e40d
2025-08-19 13:48:42 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'a3fe26c8-e35e-4688-a04c-e49b33da12f3',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'a3fe26c8-e35e-4688-a04c-e49b33da12f3',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-77300ebaccc9eb33e40d',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:48:29.748Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 13:48:42 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:48:42 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:48:42 - [32minfo[39m: getting screenshots results.
2025-08-19 13:48:42 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:48:42 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:48:42 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:48:42 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:48:59 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:00 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:00 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-e9fc850381a6cda8352a
2025-08-19 13:49:00 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'adf8884a-7ec5-4b4f-83dd-4622f477aff8',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'adf8884a-7ec5-4b4f-83dd-4622f477aff8',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-e9fc850381a6cda8352a',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:48:29.537Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -Samsung Galaxy S22:12-browserstack-mobile consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 13:49:00 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:49:00 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:49:00 - [32minfo[39m: getting screenshots results.
2025-08-19 13:49:00 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:49:00 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:49:00 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:00 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:01 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-92102373aae53c468f8d
2025-08-19 13:49:01 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '2018aa2e-ba04-4323-a3d3-0ca25670ed9c',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '2018aa2e-ba04-4323-a3d3-0ca25670ed9c',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-92102373aae53c468f8d',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:48:29.514Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -iPhone 14:16-browserstack-mobile consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 13:49:01 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:49:01 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:49:01 - [32minfo[39m: getting screenshots results.
2025-08-19 13:49:01 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:49:01 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:49:01 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:01 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:04 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:04 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:49:04 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:49:04 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:49:04 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:49:04 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:04 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:49:04 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:49:04 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:49:04 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:04 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:04 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:04 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:49:05 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=1217:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:49:05 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=78c1387f63c6e37e0bfb0a60bf52725bc4bb670c7fbedcfb2ca693467b041cd1 target=1217:0
2025-08-19 13:49:05 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Linux","os_version":"Ubuntu 20.04","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:49:06 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:06 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:49:06 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:49:06 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:49:06 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:49:06 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:06 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:49:07 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:49:07 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:49:07 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:07 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:07 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:07 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:07 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-798595df32365c7ea4d7
2025-08-19 13:49:07 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'f404b10a-f057-4050-9c14-39a5d4b86cb6',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'f404b10a-f057-4050-9c14-39a5d4b86cb6',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-798595df32365c7ea4d7',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:49:04.873Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Linux Ubuntu 20.04-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked'
}
2025-08-19 13:49:07 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:49:07 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:49:08 - [32minfo[39m: getting screenshots results.
2025-08-19 13:49:08 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:49:08 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:49:08 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:08 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:07 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:49:08 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=1249:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:49:08 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=87b2775438fc264885e470658144f12deaee4c035916943e0c68390061fea09f target=1249:0
2025-08-19 13:49:08 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:49:11 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:12 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:12 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-98b280cd54352e8039ec
2025-08-19 13:49:12 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'aa00b0a5-199d-401b-a775-f3b1ce3c7b87',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'aa00b0a5-199d-401b-a775-f3b1ce3c7b87',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-98b280cd54352e8039ec',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:49:07.596Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked'
}
2025-08-19 13:49:12 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:49:12 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:49:12 - [32minfo[39m: getting screenshots results.
2025-08-19 13:49:12 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:49:12 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:49:12 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:12 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:16 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:16 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:49:16 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:49:16 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:49:16 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:49:16 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:16 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:49:16 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:49:16 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:49:17 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:17 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:17 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:17 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:17 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:49:17 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:49:17 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:49:17 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:49:17 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=1322:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:49:17 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=47d54e241b63ca8fb59df5d710bd887dd76a1b8e58d87e0cec5bc6f0962f1dd3 target=1322:0
2025-08-19 13:49:17 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:49:17 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:49:17 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:17 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:49:17 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:49:17 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:49:17 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:18 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:18 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:18 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:49:18 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:18 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:49:18 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:49:18 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:18 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:18 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:18 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:19 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:19 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:18 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:49:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=1355:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:49:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=9088af18e9fc4d4ff1639ad57dcf95c3c8d0e83802201a592f9cecc8927a5e8c target=1355:0
2025-08-19 13:49:18 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"edge","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:49:18 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:49:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=1356:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:49:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=f6613caa69e9724c352efd8fbb4a209702a74b9c580e7c4538f3402a3af172e8 target=1356:0
2025-08-19 13:49:19 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:49:19 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:49:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=1357:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:49:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=c5531705a3ef720d788dae6b6115057976f60de74744a31d18689bd01ccb38b1 target=1357:0
2025-08-19 13:49:19 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:49:19 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:19 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:49:19 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:49:20 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:49:20 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:49:20 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:20 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:49:20 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:49:20 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:49:20 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:20 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:20 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:20 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:49:20 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=1392:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:49:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=31dc71b6c4e0c8c9afea68161843daa6f04ac229eaf196abfd8abf21c4c41953 target=1392:0
2025-08-19 13:49:21 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:49:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:21 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-e7d2375fce32c3d9540e
2025-08-19 13:49:21 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'fa0c9073-7d41-4150-87fb-822d8c033bc4',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'fa0c9073-7d41-4150-87fb-822d8c033bc4',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-e7d2375fce32c3d9540e',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:49:17.045Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked'
}
2025-08-19 13:49:21 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:49:21 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:49:21 - [32minfo[39m: getting screenshots results.
2025-08-19 13:49:21 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:49:21 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:49:21 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:21 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:26 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:26 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:26 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-66d4bd4e04104d6d436f
2025-08-19 13:49:26 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '36147f6e-1bca-42b4-99f6-5fa6bbf3c93e',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '36147f6e-1bca-42b4-99f6-5fa6bbf3c93e',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-66d4bd4e04104d6d436f',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:49:20.576Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked'
}
2025-08-19 13:49:26 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:49:26 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:49:26 - [32minfo[39m: getting screenshots results.
2025-08-19 13:49:26 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:49:26 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:49:26 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:26 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:27 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:27 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:27 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-7d990baff4d7419959f5
2025-08-19 13:49:27 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'bd36186a-ff98-4805-824f-2dc76ba278f5',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'bd36186a-ff98-4805-824f-2dc76ba278f5',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-7d990baff4d7419959f5',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:49:18.242Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked'
}
2025-08-19 13:49:27 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:49:27 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:49:27 - [32minfo[39m: getting screenshots results.
2025-08-19 13:49:27 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:49:28 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:49:28 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:28 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:35 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-d39ddb6b0a15024fdf15
2025-08-19 13:49:35 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '6b65a024-7b9b-4711-be39-ad699d025832',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '6b65a024-7b9b-4711-be39-ad699d025832',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-d39ddb6b0a15024fdf15',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:49:18.855Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked'
}
2025-08-19 13:49:35 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:49:35 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:49:35 - [32minfo[39m: getting screenshots results.
2025-08-19 13:49:35 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:49:35 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:49:35 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:35 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:43 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:43 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:43 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-56d63c4e1cf42aaf41b9
2025-08-19 13:49:43 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'dd0fe482-49b0-41b2-9216-e1b638f41ccb',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'dd0fe482-49b0-41b2-9216-e1b638f41ccb',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-56d63c4e1cf42aaf41b9',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:49:18.783Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked'
}
2025-08-19 13:49:43 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:49:44 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:49:44 - [32minfo[39m: getting screenshots results.
2025-08-19 13:49:44 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:49:44 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:49:44 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:44 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:49 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:49 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:49:49 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:49:49 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:49:49 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:49:49 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:49 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:49:49 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:49:49 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:49:50 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:50 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:50 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:50 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:50 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:49:50 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:49:50 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:49:50 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:49:50 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:50 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:49:50 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:49:50 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:49:50 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:49:50 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=1657:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:49:50 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=9615cb169d72ea26eb90d4bb79bf22f5af2bd5619383a61a5d701ebcbff31eb8 target=1657:0
2025-08-19 13:49:50 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:51 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:51 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:51 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:49:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=1692:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:49:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=95baefef735f289863477278fb0474506d969a0acb335f1cdb373086532847d6 target=1692:0
2025-08-19 13:49:51 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os_version":16,"device":"iPhone 14","real_mobile":true,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"safari","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:49:55 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:55 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:49:55 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:49:55 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:49:55 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:49:55 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:55 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:49:55 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:49:55 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:49:55 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:55 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:55 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:55 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:49:55 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=1785:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:49:55 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=da9a2e888df51499769fc506634c4c5390e4ea432e2af610e30f9b6cbe2398f2 target=1785:0
2025-08-19 13:49:55 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Linux","os_version":"Ubuntu 20.04","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:49:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:49:57 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-c9a686d225b975941cd1
2025-08-19 13:49:57 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '9ced4595-3616-44e1-9eba-00bdaebab277',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '9ced4595-3616-44e1-9eba-00bdaebab277',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-c9a686d225b975941cd1',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:49:55.644Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Linux Ubuntu 20.04-browserstack consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 13:49:57 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:49:57 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:49:57 - [32minfo[39m: getting screenshots results.
2025-08-19 13:49:57 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:49:57 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:49:57 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:57 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:57 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:57 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:49:57 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:49:58 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:49:58 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:49:58 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:58 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:49:58 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:49:58 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:49:58 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:49:58 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:49:58 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:49:58 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:49:58 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=1855:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:49:58 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=6e7853428afe294939a2cf0e8d198084cc93eb9d30c544c20e7fc1ccfc7e5262 target=1855:0
2025-08-19 13:49:58 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:50:00 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:00 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:00 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-36d8402719eeff1ad25c
2025-08-19 13:50:00 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'aefca4d1-695f-410c-b810-f6bdaa96651b',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'aefca4d1-695f-410c-b810-f6bdaa96651b',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-36d8402719eeff1ad25c',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:49:50.038Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -Samsung Galaxy S22:12-browserstack-mobile consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked'
}
2025-08-19 13:50:00 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:50:00 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:50:00 - [32minfo[39m: getting screenshots results.
2025-08-19 13:50:00 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:50:00 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:50:00 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:00 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:02 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-3baaa8f56a58838ce64c
2025-08-19 13:50:02 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '69a534f7-192e-4aa9-bb14-758d4caba95f',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '69a534f7-192e-4aa9-bb14-758d4caba95f',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-3baaa8f56a58838ce64c',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:49:58.332Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 13:50:02 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:50:02 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:50:02 - [32minfo[39m: getting screenshots results.
2025-08-19 13:50:02 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:50:03 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:50:03 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:03 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:04 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:04 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:50:04 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:50:04 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:50:04 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:50:04 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:04 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:50:04 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:50:05 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:50:05 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:05 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:05 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:05 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:50:05 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=1988:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:50:05 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=e4042f3689dee827d9f402ca89ba4e46ab01cde928f77971d14797ce83c0e20b target=1988:0
2025-08-19 13:50:05 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:50:08 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:08 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:50:08 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:50:08 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:50:08 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:50:08 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:08 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:50:08 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:50:08 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:50:09 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:09 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:09 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:09 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:50:09 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=2050:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:50:09 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=0fa8c830ace09acbdae0fb4c40408fd26b089cd4198ab11ed76cb524806eb03a target=2050:0
2025-08-19 13:50:09 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:50:09 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:09 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:09 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-83ae7c7c28faebd9cd94
2025-08-19 13:50:09 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '033a4370-2cb0-475b-b59d-0253d6e424a2',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '033a4370-2cb0-475b-b59d-0253d6e424a2',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-83ae7c7c28faebd9cd94',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:50:05.441Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 13:50:09 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:50:09 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:50:09 - [32minfo[39m: getting screenshots results.
2025-08-19 13:50:09 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:50:09 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:50:09 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:09 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:10 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:10 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:50:10 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:50:10 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:50:10 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:50:10 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:10 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:50:10 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:50:10 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:50:10 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:10 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:10 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:10 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:50:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=2081:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:50:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=fed50da819a2928a4be54203ffafad9cfaf2a2932a76c470155f4740f259f2f3 target=2081:0
2025-08-19 13:50:10 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"edge","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:50:13 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:13 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:13 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-8cf0232f2aae47a8abaa
2025-08-19 13:50:13 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'ad9cc6f8-0fcb-4b4a-8f6f-409db8ea8084',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'ad9cc6f8-0fcb-4b4a-8f6f-409db8ea8084',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-8cf0232f2aae47a8abaa',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:49:50.951Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -iPhone 14:16-browserstack-mobile consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked'
}
2025-08-19 13:50:13 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:50:13 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:50:13 - [32minfo[39m: getting screenshots results.
2025-08-19 13:50:13 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:50:13 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:50:13 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:13 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:13 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:13 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:13 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-e56bc7e395f0b4e1fc4e
2025-08-19 13:50:13 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '50b70ba2-81c4-4f39-a1bc-515d0cfa8382',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '50b70ba2-81c4-4f39-a1bc-515d0cfa8382',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-e56bc7e395f0b4e1fc4e',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:50:09.097Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 13:50:13 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:50:13 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:50:13 - [32minfo[39m: getting screenshots results.
2025-08-19 13:50:13 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:50:13 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:50:13 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:13 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:14 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:14 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:50:14 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:50:14 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:50:14 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:50:14 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:14 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:50:14 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:50:14 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:50:14 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:14 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:14 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:14 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:50:15 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=2178:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:50:15 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=18aa0e213436ddbeb8c0ae5dbb0eb75031ea41a0e0150163ca1c0d1a06def70f target=2178:0
2025-08-19 13:50:15 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:50:17 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:17 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:50:17 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:50:17 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:50:18 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:50:18 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:18 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:50:18 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:50:18 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:50:18 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:18 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:18 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:18 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:50:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=2331:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:50:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=956224164b3d2b6ff8d37549045f64ec3a8e172c7f9c3b3f34a9a60a20ab1152 target=2331:0
2025-08-19 13:50:18 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:50:20 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:20 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:20 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-1b9582a5232d3e872c1a
2025-08-19 13:50:20 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'aef706b4-1f37-4156-a2c5-58f81ff7dd31',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'aef706b4-1f37-4156-a2c5-58f81ff7dd31',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-1b9582a5232d3e872c1a',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:50:10.527Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 13:50:20 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:50:20 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:50:20 - [32minfo[39m: getting screenshots results.
2025-08-19 13:50:20 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:50:20 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:50:20 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:20 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:28 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-129e620f722b016b376c
2025-08-19 13:50:28 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '075d4686-6fb2-400d-9fd9-f7d9e171aa70',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '075d4686-6fb2-400d-9fd9-f7d9e171aa70',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-129e620f722b016b376c',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:50:18.381Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 13:50:28 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:50:28 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:50:28 - [32minfo[39m: getting screenshots results.
2025-08-19 13:50:28 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:50:28 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:50:28 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:28 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:30 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:30 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:50:30 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:50:30 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:50:30 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:50:30 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:30 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:50:30 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:50:30 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:50:30 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:30 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:30 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:30 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:50:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=2611:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:50:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=318bfe9575256e99b3ef0890da72afb0d184617e3fe1e669d5e89d9b549c3b47 target=2611:0
2025-08-19 13:50:37 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:37 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-1ac2ace9-e186-4933-aa18-1ec2908265f0.sock
2025-08-19 13:50:37 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 13:50:37 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 13:50:37 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 13:50:37 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:37 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 13:50:37 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 13:50:37 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 13:50:37 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:37 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 1ac2ace9-e186-4933-aa18-1ec2908265f0
2025-08-19 13:50:37 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:37 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 13:50:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=2790:0, state=AutomationFrameworkState.CREATE
2025-08-19 13:50:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=ed86164ac8a924b8def15bd192d33d748c10019dbffd5449fc5603e277ced4b3 target=2790:0
2025-08-19 13:50:37 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#1","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os_version":16,"device":"iPhone 14","real_mobile":true,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"safari","browserstack.testhubBuildUuid":"iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 13:50:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:40 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-41f6515959a15335e91c
2025-08-19 13:50:40 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'fd482ce4-20f3-49b6-a312-3e2d4b8a7217',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'fd482ce4-20f3-49b6-a312-3e2d4b8a7217',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-41f6515959a15335e91c',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:50:30.428Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -Samsung Galaxy S22:12-browserstack-mobile consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 13:50:40 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:50:40 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:50:40 - [32minfo[39m: getting screenshots results.
2025-08-19 13:50:40 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:50:40 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:50:40 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:40 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:51 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-c683e62b80abae1594fd
2025-08-19 13:50:51 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'f3fedfc2-cae1-44c3-9456-1581b7924efc',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'f3fedfc2-cae1-44c3-9456-1581b7924efc',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-c683e62b80abae1594fd',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:50:14.832Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 13:50:51 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:50:51 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:50:51 - [32minfo[39m: getting screenshots results.
2025-08-19 13:50:51 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:50:51 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:50:51 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:51 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 13:50:57 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-e360e915882b969db51e
2025-08-19 13:50:57 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '3e3ed32f-aecb-46bb-a785-a9c4882aabc6',
  test_framework_name: 'Playwright',
  test_framework_version: '1.54.2',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '3e3ed32f-aecb-46bb-a785-a9c4882aabc6',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-e360e915882b969db51e',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T11:50:37.552Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -iPhone 14:16-browserstack-mobile consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 13:50:57 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 13:50:57 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 13:50:57 - [32minfo[39m: getting screenshots results.
2025-08-19 13:50:57 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 13:50:57 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 13:50:57 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 13:50:57 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 13:50:57 - [32minfo[39m: [BrowserstackCLI] stop: CLI stop triggered
2025-08-19 13:50:57 - [32minfo[39m: [BrowserstackCLI] stop: CLI stop triggered
2025-08-19 13:50:57 - [32minfo[39m: [GrpcClient] Stopping bin session
2025-08-19 13:50:57 - [32minfo[39m: [GrpcClient] Stopping bin session
2025-08-19 13:51:00 - [32minfo[39m: [GrpcClient] StopBinSession successful
2025-08-19 13:51:00 - [32minfo[39m: [GrpcClient] StopBinSession successful
2025-08-19 13:51:00 - [32minfo[39m: [BrowserstackCLI] stop: stopBinSession build_link=https://automate.browserstack.com/dashboard/v2/builds/8492f389f84831bad185ab90bab11b08829df111 hashed_id=8492f389f84831bad185ab90bab11b08829df111 o11y_uuid=iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5
2025-08-19 13:51:00 - [32minfo[39m: [BrowserstackCLI] Unconfiguring modules
2025-08-19 13:51:00 - [32minfo[39m: [BrowserstackCLI] stop: channel closed
2025-08-19 13:51:00 - [32minfo[39m: [BrowserstackCLI] stop: stopBinSession build_link=https://automate.browserstack.com/dashboard/v2/builds/8492f389f84831bad185ab90bab11b08829df111 hashed_id=8492f389f84831bad185ab90bab11b08829df111 o11y_uuid=iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5
2025-08-19 13:51:00 - [32minfo[39m: [BrowserstackCLI] Unconfiguring modules
2025-08-19 13:51:00 - [32minfo[39m: [BrowserstackCLI] stop: channel closed
2025-08-19 13:51:05 - [32minfo[39m: [BrowserstackCLI] stop: shutting down CLI
2025-08-19 13:51:05 - [32minfo[39m: [BrowserstackCLI] stop: shutting down CLI
2025-08-19 13:51:05 - [32minfo[39m: [BrowserstackCLI] stop: CLI process exited
2025-08-19 13:51:05 - [32minfo[39m: [BrowserstackCLI] stop: CLI process exited
2025-08-19 13:51:05 - [32minfo[39m: Visit https://automation.browserstack.com/builds/iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5 to view build report, insights, and many more debugging information all at one place!

2025-08-19 13:51:05 - [32minfo[39m: Visit https://automation.browserstack.com/builds/iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5 to view build report, insights, and many more debugging information all at one place!

2025-08-19 13:51:05 - [32minfo[39m: SDK run ended for id: bcedebd4-0934-4bff-bf5d-2211c18bd7ee, testhub id: iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5
2025-08-19 13:51:05 - [32minfo[39m: SDK run ended for id: bcedebd4-0934-4bff-bf5d-2211c18bd7ee, testhub id: iyv2fm6vrq73dxtabpde7yc7pnb71xiyqkhcwfq5
2025-08-19 13:51:08 - [32minfo[39m: Deleting /Users/nandi/Documents/projekte/DecentraSol/simple-todo/playwright-browserstack-sdk.config.cjs
2025-08-19 13:51:08 - [32minfo[39m: Deleting /Users/nandi/Documents/projekte/DecentraSol/simple-todo/playwright-browserstack-sdk.config.cjs
2025-08-19 13:51:08 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 13:51:08 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 14:45:39 - [32minfo[39m: Reading configs from /Users/nandi/Documents/projekte/DecentraSol/simple-todo/browserstack.yml
2025-08-19 14:45:39 - [32minfo[39m: Log Directory has been set to /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log
2025-08-19 14:45:39 - [32minfo[39m: Log Directory has been set to /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log
2025-08-19 14:45:39 - [32minfo[39m: Running SDK with args /Users/nandi/.nvm/versions/node/v20.19.4/bin/node /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/browserstack-node-sdk/src/bin/runner.js playwright test e2e/consent-screen.spec.js --config=playwright.browserstack.config.js
2025-08-19 14:45:39 - [32minfo[39m: SDK run started with id: cc69a11e-32f2-4e50-9481-a848ba6693c7
2025-08-19 14:45:40 - [32minfo[39m: Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
2025-08-19 14:45:39 - [32minfo[39m: Running SDK with args /Users/nandi/.nvm/versions/node/v20.19.4/bin/node /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/browserstack-node-sdk/src/bin/runner.js playwright test e2e/consent-screen.spec.js --config=playwright.browserstack.config.js
2025-08-19 14:45:39 - [32minfo[39m: SDK run started with id: cc69a11e-32f2-4e50-9481-a848ba6693c7
2025-08-19 14:45:40 - [32minfo[39m: Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
2025-08-19 14:45:42 - [32minfo[39m: [BrowserstackCLI] startMain: Starting main process
2025-08-19 14:45:42 - [32minfo[39m: [BrowserstackCLI] startMain: Starting main process
2025-08-19 14:45:42 - [32minfo[39m: [CLIUtils] Current CLI Path Found: /Users/nandi/.browserstack/cli/binary-macos-x64
2025-08-19 14:45:42 - [32minfo[39m: [CLIUtils] Current CLI Path Found: /Users/nandi/.browserstack/cli/binary-macos-x64
2025-08-19 14:45:45 - [32minfo[39m: [BrowserstackCLI] spawning command='/Users/nandi/.browserstack/cli/binary-macos-x64,sdk'
2025-08-19 14:45:45 - [32minfo[39m: [BrowserstackCLI] spawning command='/Users/nandi/.browserstack/cli/binary-macos-x64,sdk'
2025-08-19 14:45:47 - [32minfo[39m: [BrowserstackCLI] CLI params loaded: {"id":"ef688107-aa4a-494f-8d49-ef14bfbe37cc","listen":"unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock"}
2025-08-19 14:45:47 - [32minfo[39m: [BrowserstackCLI] CLI params loaded: {"id":"ef688107-aa4a-494f-8d49-ef14bfbe37cc","listen":"unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock"}
2025-08-19 14:45:47 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:45:47 - [32minfo[39m: [GrpcClient] Initialized gRPC client with bin session id: ef688107-aa4a-494f-8d49-ef14bfbe37cc and listen address: unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:45:47 - [32minfo[39m: [GrpcClient] startBinSession: Calling startBinSession
2025-08-19 14:45:47 - [32minfo[39m: [GrpcClient] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"], parsedConfig=[]
2025-08-19 14:45:47 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:45:47 - [32minfo[39m: [GrpcClient] Initialized gRPC client with bin session id: ef688107-aa4a-494f-8d49-ef14bfbe37cc and listen address: unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:45:47 - [32minfo[39m: [GrpcClient] startBinSession: Calling startBinSession
2025-08-19 14:45:47 - [32minfo[39m: [GrpcClient] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"], parsedConfig=[]
2025-08-19 14:45:49 - [32minfo[39m: [GrpcClient] StartBinSession successful
2025-08-19 14:45:49 - [32minfo[39m: [GrpcClient] StartBinSession successful
2025-08-19 14:45:49 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:45:49 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:45:49 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:45:49 - [32minfo[39m: [BrowserstackCLI] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"]
2025-08-19 14:45:49 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:45:49 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:45:49 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:45:49 - [32minfo[39m: [BrowserstackCLI] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"]
2025-08-19 14:46:30 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:46:30 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:46:30 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:46:30 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:46:30 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:46:30 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:46:30 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:46:31 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:46:31 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:46:32 - [32minfo[39m: Setting up TestInfo directory at /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log/.obs_test_details-undefined
2025-08-19 14:46:32 - [32minfo[39m: [PlaywrightTestFramework] trackPlaywrightInstance: created instance for target=55323:0, state=TestFrameworkState.INIT_TEST
2025-08-19 14:46:32 - [32minfo[39m: [PlaywrightTestFramework] trackPlaywrightInstance: saved instance contextId=4a7a12f67da7fa876a916893e84c2d73cb0edb34d9684f0f403e26c1c6d76813 target=55323:0
2025-08-19 14:47:34 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:34 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:34 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:34 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:34 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:34 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:34 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:34 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:47:34 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:47:34 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:47:34 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:47:34 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:36 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:47:35 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:47:36 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:47:36 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:47:36 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:47:36 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:47:36 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:47:36 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:47:36 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:47:36 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:47:36 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:47:36 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:47:36 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:47:36 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:47:36 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=56039:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=16d071c215ce839a7b61a681085b352272bc2dd6e03ccee34af7a8a1953eecab target=56039:0
2025-08-19 14:47:36 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=56047:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=88520077001d38c06746a36e9d444a47d3effc8dfeed85d6016acc243369bc0e target=56047:0
2025-08-19 14:47:36 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"edge","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=56042:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=2a333b2ee756bf9d057a9a00f74e22ddf56e4508f5cbc083ab7316da120fd9ee target=56042:0
2025-08-19 14:47:36 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=56043:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=3ef6444205f7e005af3f8aa04e2b79c0dcaeb7f10125f5bfceb8374f8c428292 target=56043:0
2025-08-19 14:47:36 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=56045:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=477d6915b3208bae7a8382148a3b86778684e845a595670b877b60c193c6fe6d target=56045:0
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=56044:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=87775a8fecfb33fa168b3ef8e63cd854b860d2071cddbc6df72638f95d63f51e target=56044:0
2025-08-19 14:47:36 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os_version":16,"device":"iPhone 14","real_mobile":true,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"safari","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=56046:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=801bfe65fc9b9c19265287c57c20afe5634e0383553e0e03f741ef77c4f1f8fd target=56046:0
2025-08-19 14:47:36 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Linux","os_version":"Ubuntu 20.04","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:47:35 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=56048:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=71d7c776a0279b755bbc76e05910d47581ffc8743f5616e12dbf0870a19731e8 target=56048:0
2025-08-19 14:47:36 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:47:36 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=56041:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:47:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=d084a8478586fdaa047991d05a438959fc72bf589266601e6cab04f471d5c511 target=56041:0
2025-08-19 14:47:36 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:47:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:37 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-9cff69de19f133588e7e
2025-08-19 14:47:37 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '002faaf0-d09e-47d2-b9b3-7772fb14fb82',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '002faaf0-d09e-47d2-b9b3-7772fb14fb82',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-9cff69de19f133588e7e',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:47:35.858Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Linux Ubuntu 20.04-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 14:47:37 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:47:37 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:47:37 - [32minfo[39m: getting screenshots results.
2025-08-19 14:47:37 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:47:38 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:47:38 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:47:38 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:47:39 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:39 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:39 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:47:39 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:47:39 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:40 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:47:40 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:47:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:40 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:47:40 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:47:40 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:47:41 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:41 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:47:41 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:47:42 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:47:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:45 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:47:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:45 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:47:45 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:47:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:45 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:47:45 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:47:45 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:47:46 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:46 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:46 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:46 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:47:46 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:47:46 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:47:46 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-a02ab29e91f16711c14a
2025-08-19 14:47:46 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:46 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'e21f7c67-c9a4-447f-8731-596a964e480a',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'e21f7c67-c9a4-447f-8731-596a964e480a',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-a02ab29e91f16711c14a',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:47:35.976Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-OSX-Monterey-browserstack1/test-failed-1.png'
    }
  ]
}
2025-08-19 14:47:46 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:47:46 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:47:46 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:47:46 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:47:46 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:47:47 - [32minfo[39m: getting screenshots results.
2025-08-19 14:47:47 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:47:47 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:47:47 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:47:47 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:47:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:48 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:47:48 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:47:48 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:47:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:52 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:47:52 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:47:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:53 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:47:53 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:47:53 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:47:55 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:47:55 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:47:56 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:47:56 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:47:56 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-c0c6295118fa82688bd1
2025-08-19 14:47:56 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '2c40a0fd-7c52-4c33-b735-573b433ffb58',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '2c40a0fd-7c52-4c33-b735-573b433ffb58',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-c0c6295118fa82688bd1',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:47:35.777Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-Windows-11-browserstack1/test-failed-1.png'
    }
  ]
}
2025-08-19 14:47:56 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:47:56 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:47:56 - [32minfo[39m: getting screenshots results.
2025-08-19 14:47:56 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:47:56 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:47:56 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:47:56 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:10 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:10 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:48:10 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:48:10 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:48:10 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:48:10 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:10 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:48:10 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:48:10 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:48:10 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:10 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:10 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:10 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:48:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=57125:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:48:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=ab04939f16f63099b7f4aada63b1beccaafe40de213e890661851077c8ee394d target=57125:0
2025-08-19 14:48:10 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Linux","os_version":"Ubuntu 20.04","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:48:13 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:13 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-798595df32365c7ea4d7
2025-08-19 14:48:13 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'd415ec92-e7c8-4b6e-a622-8b79f7494ccf',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'd415ec92-e7c8-4b6e-a622-8b79f7494ccf',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-798595df32365c7ea4d7',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:48:10.603Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Linux Ubuntu 20.04-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked'
}
2025-08-19 14:48:13 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:13 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:13 - [32minfo[39m: getting screenshots results.
2025-08-19 14:48:13 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:48:13 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:48:13 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:13 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:17 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:17 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:17 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:17 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:48:17 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:17 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:48:17 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:48:17 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:48:17 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-b37db3cf5b716db96e50
2025-08-19 14:48:17 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:48:17 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:17 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:48:17 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '553450be-9122-4468-9fd7-1d1922e32935',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '553450be-9122-4468-9fd7-1d1922e32935',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-b37db3cf5b716db96e50',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:47:35.841Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-OSX-Monterey-browserstack2/test-failed-1.png'
    }
  ]
}
2025-08-19 14:48:17 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:17 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:17 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:48:17 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:48:18 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:18 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:18 - [32minfo[39m: getting screenshots results.
2025-08-19 14:48:18 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:48:18 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:18 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:48:18 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:18 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:18 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:48:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=57248:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:48:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=e8c97bbeee56af342bbeef972010984f9f11430931e5f8d48dfd90e30c54acb5 target=57248:0
2025-08-19 14:48:18 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:48:22 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:22 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:22 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:48:22 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:48:23 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:25 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:25 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:25 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:25 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:48:25 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:25 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:25 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:25 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:48:26 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-071fc1371fa8ca11bf28
2025-08-19 14:48:26 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'd285e276-8983-4fdf-b364-61ac8f94e5d8',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'd285e276-8983-4fdf-b364-61ac8f94e5d8',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-071fc1371fa8ca11bf28',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:47:35.845Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-Windows-11-browserstack/test-failed-1.png'
    }
  ]
}
2025-08-19 14:48:26 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:26 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:26 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:26 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:26 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:26 - [32minfo[39m: getting screenshots results.
2025-08-19 14:48:26 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:26 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:48:26 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:26 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:48:26 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:26 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:48:26 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:48:26 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:26 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:48:27 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:27 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-77300ebaccc9eb33e40d
2025-08-19 14:48:27 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'fd9c314b-7b99-434d-991f-f33ab76d8551',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'fd9c314b-7b99-434d-991f-f33ab76d8551',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-77300ebaccc9eb33e40d',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:47:35.878Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-OSX-Monterey-browserstack/test-failed-1.png'
    }
  ]
}
2025-08-19 14:48:27 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:27 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:27 - [32minfo[39m: getting screenshots results.
2025-08-19 14:48:27 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:48:27 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:48:27 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:27 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:27 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:27 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:27 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:27 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:48:29 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:29 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:48:29 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:48:29 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:48:29 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:29 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:48:29 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:48:29 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:48:30 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:30 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:30 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:30 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:48:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=57387:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:48:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=3ed733b41eccada3fbd0ad12c8d85fcf81e487205a6679bf0322ea0ff23102b6 target=57387:0
2025-08-19 14:48:30 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:48:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:30 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:48:30 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:48:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:32 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:32 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:32 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:32 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:48:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:38 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:38 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:38 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:48:38 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-e7d2375fce32c3d9540e
2025-08-19 14:48:38 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'fa7edbc2-0f95-4bcf-8533-60c77ee443e9',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'fa7edbc2-0f95-4bcf-8533-60c77ee443e9',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-e7d2375fce32c3d9540e',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:48:18.274Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-10/7995b73c746d437d536e13e7d474fe9b.png'
    }
  ]
}
2025-08-19 14:48:38 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:38 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:39 - [32minfo[39m: getting screenshots results.
2025-08-19 14:48:39 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:48:39 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:39 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:48:39 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:39 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:39 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:39 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:39 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:39 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:39 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:39 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:48:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:40 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:48:40 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:48:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:45 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:45 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:45 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-e9fc850381a6cda8352a
2025-08-19 14:48:45 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'd42c6161-48ed-40b7-a908-38a1e8728889',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'd42c6161-48ed-40b7-a908-38a1e8728889',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-e9fc850381a6cda8352a',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:47:35.867Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -Samsung Galaxy S22:12-browserstack-mobile consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 14:48:45 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:45 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:45 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:48:47 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:47 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:48:47 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:48:47 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:48:48 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:48:48 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:48 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:48:48 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:48:48 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:48:48 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:48 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:48 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:48 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:48:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=57624:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:48:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=4dd57e25acec9c2349b83990e69b6d7374f1bab9ccde3a6d79d948b705285a22 target=57624:0
2025-08-19 14:48:48 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Linux","os_version":"Ubuntu 20.04","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:48:49 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:49 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:49 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:49 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:48:49 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-83ae7c7c28faebd9cd94
2025-08-19 14:48:49 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '7cb9783d-1321-4a33-aecb-f61dffef0633',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '7cb9783d-1321-4a33-aecb-f61dffef0633',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-83ae7c7c28faebd9cd94',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:48:39.080Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-10/2150c36de6ebd64c94a70ef7d0849d48.png'
    }
  ]
}
2025-08-19 14:48:49 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:49 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:49 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:49 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-c9a686d225b975941cd1
2025-08-19 14:48:49 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'f7df24e2-09b5-4f08-9c99-840c1b6bce39',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'f7df24e2-09b5-4f08-9c99-840c1b6bce39',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-c9a686d225b975941cd1',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:48:48.306Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Linux Ubuntu 20.04-browserstack consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 14:48:49 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:49 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:49 - [32minfo[39m: getting screenshots results.
2025-08-19 14:48:49 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:48:49 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:48:49 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:49 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:50 - [32minfo[39m: getting screenshots results.
2025-08-19 14:48:50 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:48:50 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:48:50 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:50 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:50 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:50 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:48:50 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:48:51 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:48:51 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:48:51 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:51 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:48:51 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:48:51 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:48:51 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:51 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:51 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:51 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:48:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=57702:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:48:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=962dbf7d029eebe727dce5d9aac1dd1840f5078bcb2152968886363a7e05d3ea target=57702:0
2025-08-19 14:48:51 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:48:54 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:54 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:54 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:48:54 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:48:54 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:55 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:55 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:55 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:55 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:48:55 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:48:55 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:55 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:55 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:48:55 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-36ccb61f1811542860a2
2025-08-19 14:48:55 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'c2b49b70-ef39-4130-8f2e-41a2a544db53',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'c2b49b70-ef39-4130-8f2e-41a2a544db53',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-36ccb61f1811542860a2',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:47:35.840Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 14:48:55 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:48:56 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:48:56 - [32minfo[39m: getting screenshots results.
2025-08-19 14:48:56 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:48:56 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:48:56 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:56 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:57 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:57 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:48:57 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:48:57 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:48:57 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:48:57 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:57 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:48:57 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:48:57 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:48:57 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:57 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:57 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:58 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:58 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:48:58 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:48:58 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:48:57 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:48:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=57813:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:48:58 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=4aa169bf1f569ae811a4cd9f3ea9163b994f54aa27ecaafc91d0a8da79a3d2c8 target=57813:0
2025-08-19 14:48:58 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:48:58 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:48:58 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:58 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:48:58 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:48:58 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:48:58 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:48:58 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:48:58 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:48:58 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:48:58 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=57842:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:48:58 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=d2ba0487c4da9d12eaebfba234c0adb56b773e7801699378b0cbedb84c30c4d7 target=57842:0
2025-08-19 14:48:58 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:49:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:02 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:49:02 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:49:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:03 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:03 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:03 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:03 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:03 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:03 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:03 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-98b280cd54352e8039ec
2025-08-19 14:49:03 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '36a7953b-c6a9-490f-a0be-4537482857c4',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '36a7953b-c6a9-490f-a0be-4537482857c4',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-98b280cd54352e8039ec',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:48:51.323Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-13/ea6f12b8ddb690a95823e1c47b926d64.png'
    }
  ]
}
2025-08-19 14:49:03 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:03 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:04 - [32minfo[39m: getting screenshots results.
2025-08-19 14:49:04 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:49:04 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:04 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:49:04 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:04 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:04 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:04 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:04 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:04 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:04 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:04 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:09 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:09 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:09 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:09 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:09 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-3baaa8f56a58838ce64c
2025-08-19 14:49:09 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'd6417ca6-b3b9-44d5-b541-237a38db70e8',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'd6417ca6-b3b9-44d5-b541-237a38db70e8',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-3baaa8f56a58838ce64c',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:49:04.028Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-13/9a06a32aaa9ed2add78358558ffadc8b.png'
    }
  ]
}
2025-08-19 14:49:09 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:09 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:09 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:09 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:09 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:09 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:09 - [32minfo[39m: getting screenshots results.
2025-08-19 14:49:09 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:49:09 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:49:09 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:09 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:10 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-66d4bd4e04104d6d436f
2025-08-19 14:49:10 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '80975a4c-1f33-442a-9493-3120a75752b9',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '80975a4c-1f33-442a-9493-3120a75752b9',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-66d4bd4e04104d6d436f',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:48:58.503Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-15/b14138705d3924dcd002062ef7b02dbd.png'
    }
  ]
}
2025-08-19 14:49:10 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:10 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:10 - [32minfo[39m: getting screenshots results.
2025-08-19 14:49:10 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:49:10 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:10 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:49:10 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:10 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:10 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:11 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:11 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:11 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:11 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:11 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:11 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:11 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:11 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:11 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-d39ddb6b0a15024fdf15
2025-08-19 14:49:11 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '8647154b-2ab5-4bbf-b016-6a9d1c535fdb',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '8647154b-2ab5-4bbf-b016-6a9d1c535fdb',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-d39ddb6b0a15024fdf15',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:48:30.146Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-11/11094723121ef284251bf2e575c93465.png'
    }
  ]
}
2025-08-19 14:49:11 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:11 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:11 - [32minfo[39m: getting screenshots results.
2025-08-19 14:49:11 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:49:11 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:11 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:49:11 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:11 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:11 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:11 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:12 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:12 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:12 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:12 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:14 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:14 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:14 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:15 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-e56bc7e395f0b4e1fc4e
2025-08-19 14:49:15 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'aee986bc-4fe6-4257-bc85-9dce76fde1b9',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'aee986bc-4fe6-4257-bc85-9dce76fde1b9',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-e56bc7e395f0b4e1fc4e',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:49:10.436Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-15/b4b39b3d49e69a73371d433f8978ac1f.png'
    }
  ]
}
2025-08-19 14:49:15 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:15 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:15 - [32minfo[39m: getting screenshots results.
2025-08-19 14:49:15 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:49:15 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:49:15 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:15 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:15 - [32minfo[39m: getting screenshots results.
2025-08-19 14:49:15 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:49:15 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:49:15 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:15 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:18 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:49:18 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:49:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:18 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:18 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:18 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:19 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-c683e62b80abae1594fd
2025-08-19 14:49:19 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'b9b9a039-c656-4b79-8b64-a7074688bcf4',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'b9b9a039-c656-4b79-8b64-a7074688bcf4',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-c683e62b80abae1594fd',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:49:11.845Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-11/bad6d472b1092236f3cbdc85a9469c39.png'
    }
  ]
}
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:19 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:49:19 - [32minfo[39m: getting screenshots results.
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:49:19 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:49:19 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:49:19 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:49:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:19 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:19 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:49:19 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:19 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:49:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=58237:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:49:19 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=c44ea1ff35f435b73a6215839a9b5693b0c1800845a438625ef92eb92d79b92e target=58237:0
2025-08-19 14:49:19 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"edge","browser_version":"latest","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:49:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:28 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:28 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:28 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:29 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-56d63c4e1cf42aaf41b9
2025-08-19 14:49:29 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'eecff754-f93d-4def-ac16-bf9f036346e7',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'eecff754-f93d-4def-ac16-bf9f036346e7',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-56d63c4e1cf42aaf41b9',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:48:57.807Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-14/e6324651af897d5c388b690b52f88098.png'
    }
  ]
}
2025-08-19 14:49:29 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:29 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:29 - [32minfo[39m: getting screenshots results.
2025-08-19 14:49:29 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:49:29 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:29 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:49:29 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:29 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:29 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:30 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:30 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:30 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:33 - [32minfo[39m: getting screenshots results.
2025-08-19 14:49:33 - [32minfo[39m: getScreenshots: screenshot file not found, skipping attachment: /Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--iPhone-14-16-browserstack-mobile/test-failed-1.png
2025-08-19 14:49:33 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:49:33 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:49:33 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:33 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:33 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:33 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:34 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:34 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-129e620f722b016b376c
2025-08-19 14:49:34 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '72e51b12-ccc6-4cd5-90fe-971f0ebb52c2',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '72e51b12-ccc6-4cd5-90fe-971f0ebb52c2',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-129e620f722b016b376c',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:49:29.736Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-14/d7e1609013c73d4430b57657f8bd3900.png'
    }
  ]
}
2025-08-19 14:49:34 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:34 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:34 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:49:34 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:49:34 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:49:34 - [32minfo[39m: getting screenshots results.
2025-08-19 14:49:34 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:49:34 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:49:34 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:34 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:34 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:49:34 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:49:34 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:49:34 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:49:34 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:49:34 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:49:34 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:34 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:34 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:49:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:34 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:49:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=58513:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:49:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=8951b5134f689f7c1585776c45647b599db5c0339dc51403f39e53bee4f7e418 target=58513:0
2025-08-19 14:49:35 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:49:35 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:49:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:36 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:36 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:36 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:36 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:45 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:49:45 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:49:46 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:46 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:46 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:46 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:46 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-7d990baff4d7419959f5
2025-08-19 14:49:46 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'e0cba988-0e22-49f2-a4ba-fb9376b1ddd9',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'e0cba988-0e22-49f2-a4ba-fb9376b1ddd9',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-7d990baff4d7419959f5',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:49:19.706Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-16/ba3311c7ae65b90047f946af53b34be1.png'
    }
  ]
}
2025-08-19 14:49:46 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:46 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:47 - [32minfo[39m: getting screenshots results.
2025-08-19 14:49:47 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:49:47 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:47 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:49:47 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:47 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:47 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:47 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:47 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:47 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:47 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:47 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:49:51 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:51 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:51 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:49:51 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-1b9582a5232d3e872c1a
2025-08-19 14:49:51 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '2c0954eb-0fe1-472d-9cc1-00268abd8022',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '2c0954eb-0fe1-472d-9cc1-00268abd8022',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-1b9582a5232d3e872c1a',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:49:47.064Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-16/819a5051fd28f8071f97b40adc326c6c.png'
    }
  ]
}
2025-08-19 14:49:51 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:49:51 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:49:51 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:49:51 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:49:51 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:49:51 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:49:51 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:49:51 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:49:51 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:49:51 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:49:51 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:49:51 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:51 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:51 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:49:52 - [32minfo[39m: getting screenshots results.
2025-08-19 14:49:52 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:49:52 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:49:52 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:49:52 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:49:51 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:49:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=58771:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:49:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=d8971950f9ea881e0a2445979c469281aca4d6e97c15882f831d1c20c0f289ed target=58771:0
2025-08-19 14:49:52 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os_version":16,"device":"iPhone 14","real_mobile":true,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"safari","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:50:16 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:50:16 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:50:16 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:50:16 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:50:17 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:50:20 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:50:20 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:50:20 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:50:20 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:50:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:50:45 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-36d8402719eeff1ad25c
2025-08-19 14:50:45 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '237ddcb3-0ae1-4bd5-830e-623fb4911b50',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '237ddcb3-0ae1-4bd5-830e-623fb4911b50',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-36d8402719eeff1ad25c',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:49:34.839Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -Samsung Galaxy S22:12-browserstack-mobile consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked'
}
2025-08-19 14:50:45 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:50:45 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:51:15 - [32minfo[39m: getting screenshots results.
2025-08-19 14:51:15 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:51:15 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:51:15 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:51:15 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:51:25 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:51:25 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:51:25 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:51:25 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:51:25 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:51:25 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:51:25 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:51:25 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:51:25 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:51:25 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:51:25 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:51:25 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:51:25 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:51:25 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=60247:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:51:25 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=ab447596762ec08b1d7c00c7949853f22f5a71208527e709f8fec339aff62835 target=60247:0
2025-08-19 14:51:28 - [32minfo[39m: getting screenshots results.
2025-08-19 14:51:28 - [32minfo[39m: getScreenshots: screenshot file not found, skipping attachment: /Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-b6fac-on-when-checkbox-is-checked--iPhone-14-16-browserstack-mobile/test-failed-1.png
2025-08-19 14:51:28 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:51:28 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:51:28 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:51:28 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:51:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:51:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:51:34 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:51:34 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:51:39 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:51:39 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-ef688107-aa4a-494f-8d49-ef14bfbe37cc.sock
2025-08-19 14:51:39 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 14:51:39 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 14:51:39 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 14:51:39 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:51:39 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 14:51:39 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 14:51:39 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 14:51:40 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:51:40 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:51:40 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: ef688107-aa4a-494f-8d49-ef14bfbe37cc
2025-08-19 14:51:40 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 14:51:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=60445:0, state=AutomationFrameworkState.CREATE
2025-08-19 14:51:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=ec466896aa5f4f61c6644271b8d161cf0bb35c9f78a00449af4c1f4611b20dab target=60445:0
2025-08-19 14:51:40 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#2","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os_version":16,"device":"iPhone 14","real_mobile":true,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"safari","browserstack.testhubBuildUuid":"dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 14:52:08 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:52:08 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:52:08 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 14:52:08 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 14:52:09 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:52:11 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:52:11 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:52:11 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:52:11 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 14:52:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 14:52:34 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-41f6515959a15335e91c
2025-08-19 14:52:34 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'd3b2fac1-b5da-4370-bbb7-f2cf9d6941d3',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'd3b2fac1-b5da-4370-bbb7-f2cf9d6941d3',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-41f6515959a15335e91c',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T12:51:25.683Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -Samsung Galaxy S22:12-browserstack-mobile consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 14:52:34 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 14:52:34 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 14:53:04 - [32minfo[39m: getting screenshots results.
2025-08-19 14:53:04 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:53:04 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:53:04 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:53:04 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:53:20 - [32minfo[39m: getting screenshots results.
2025-08-19 14:53:20 - [32minfo[39m: getScreenshots: screenshot file not found, skipping attachment: /Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-c44ed-equired-consent-information--iPhone-14-16-browserstack-mobile/test-failed-1.png
2025-08-19 14:53:20 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 14:53:20 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 14:53:20 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 14:53:20 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 14:53:20 - [32minfo[39m: [BrowserstackCLI] stop: CLI stop triggered
2025-08-19 14:53:20 - [32minfo[39m: [BrowserstackCLI] stop: CLI stop triggered
2025-08-19 14:53:20 - [32minfo[39m: [GrpcClient] Stopping bin session
2025-08-19 14:53:20 - [32minfo[39m: [GrpcClient] Stopping bin session
2025-08-19 14:53:23 - [32minfo[39m: [GrpcClient] StopBinSession successful
2025-08-19 14:53:23 - [32minfo[39m: [GrpcClient] StopBinSession successful
2025-08-19 14:53:23 - [32minfo[39m: [BrowserstackCLI] stop: stopBinSession build_link=https://automate.browserstack.com/dashboard/v2/builds/295475660937ad683ff639c4d6f193b0b19de736 hashed_id=295475660937ad683ff639c4d6f193b0b19de736 o11y_uuid=dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh
2025-08-19 14:53:23 - [32minfo[39m: [BrowserstackCLI] Unconfiguring modules
2025-08-19 14:53:23 - [32minfo[39m: [BrowserstackCLI] stop: channel closed
2025-08-19 14:53:23 - [32minfo[39m: [BrowserstackCLI] stop: stopBinSession build_link=https://automate.browserstack.com/dashboard/v2/builds/295475660937ad683ff639c4d6f193b0b19de736 hashed_id=295475660937ad683ff639c4d6f193b0b19de736 o11y_uuid=dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh
2025-08-19 14:53:23 - [32minfo[39m: [BrowserstackCLI] Unconfiguring modules
2025-08-19 14:53:23 - [32minfo[39m: [BrowserstackCLI] stop: channel closed
2025-08-19 14:53:28 - [32minfo[39m: [BrowserstackCLI] stop: shutting down CLI
2025-08-19 14:53:28 - [32minfo[39m: [BrowserstackCLI] stop: shutting down CLI
2025-08-19 14:53:28 - [32minfo[39m: [BrowserstackCLI] stop: CLI process exited
2025-08-19 14:53:28 - [32minfo[39m: [BrowserstackCLI] stop: CLI process exited
2025-08-19 14:53:28 - [32minfo[39m: Visit https://automation.browserstack.com/builds/dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh to view build report, insights, and many more debugging information all at one place!

2025-08-19 14:53:28 - [32minfo[39m: Visit https://automation.browserstack.com/builds/dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh to view build report, insights, and many more debugging information all at one place!

2025-08-19 14:53:28 - [32minfo[39m: SDK run ended for id: cc69a11e-32f2-4e50-9481-a848ba6693c7, testhub id: dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh
2025-08-19 14:53:28 - [32minfo[39m: SDK run ended for id: cc69a11e-32f2-4e50-9481-a848ba6693c7, testhub id: dssdle2ym4arptttbczno3rtcd8vzr1acpqxmbyh
2025-08-19 14:53:35 - [32minfo[39m: Deleting /Users/nandi/Documents/projekte/DecentraSol/simple-todo/playwright-browserstack-sdk.config.cjs
2025-08-19 14:53:35 - [32minfo[39m: Deleting /Users/nandi/Documents/projekte/DecentraSol/simple-todo/playwright-browserstack-sdk.config.cjs
2025-08-19 14:53:35 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 14:53:35 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 15:00:22 - [32minfo[39m: Reading configs from /Users/nandi/Documents/projekte/DecentraSol/simple-todo/browserstack.yml
2025-08-19 15:00:22 - [32minfo[39m: Log Directory has been set to /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log
2025-08-19 15:00:22 - [32minfo[39m: Log Directory has been set to /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log
2025-08-19 15:00:22 - [32minfo[39m: Running SDK with args /Users/nandi/.nvm/versions/node/v20.19.4/bin/node /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/browserstack-node-sdk/src/bin/runner.js playwright test e2e/consent-screen.spec.js --config=playwright.browserstack.config.js
2025-08-19 15:00:22 - [32minfo[39m: SDK run started with id: 5f0c9ed9-6c93-4c4d-9a97-57baaf1aa424
2025-08-19 15:00:22 - [32minfo[39m: Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
2025-08-19 15:00:22 - [32minfo[39m: Running SDK with args /Users/nandi/.nvm/versions/node/v20.19.4/bin/node /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/browserstack-node-sdk/src/bin/runner.js playwright test e2e/consent-screen.spec.js --config=playwright.browserstack.config.js
2025-08-19 15:00:22 - [32minfo[39m: SDK run started with id: 5f0c9ed9-6c93-4c4d-9a97-57baaf1aa424
2025-08-19 15:00:22 - [32minfo[39m: Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
2025-08-19 15:00:23 - [32minfo[39m: [BrowserstackCLI] startMain: Starting main process
2025-08-19 15:00:23 - [32minfo[39m: [BrowserstackCLI] startMain: Starting main process
2025-08-19 15:00:23 - [32minfo[39m: [CLIUtils] Current CLI Path Found: /Users/nandi/.browserstack/cli/binary-macos-x64
2025-08-19 15:00:23 - [32minfo[39m: [CLIUtils] Current CLI Path Found: /Users/nandi/.browserstack/cli/binary-macos-x64
2025-08-19 15:00:24 - [32minfo[39m: [BrowserstackCLI] spawning command='/Users/nandi/.browserstack/cli/binary-macos-x64,sdk'
2025-08-19 15:00:24 - [32minfo[39m: [BrowserstackCLI] spawning command='/Users/nandi/.browserstack/cli/binary-macos-x64,sdk'
2025-08-19 15:00:25 - [32minfo[39m: [BrowserstackCLI] CLI params loaded: {"id":"9e58c55e-fb51-4c79-8ea1-251ddf4b1252","listen":"unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock"}
2025-08-19 15:00:25 - [32minfo[39m: [BrowserstackCLI] CLI params loaded: {"id":"9e58c55e-fb51-4c79-8ea1-251ddf4b1252","listen":"unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock"}
2025-08-19 15:00:25 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:00:25 - [32minfo[39m: [GrpcClient] Initialized gRPC client with bin session id: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252 and listen address: unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:00:25 - [32minfo[39m: [GrpcClient] startBinSession: Calling startBinSession
2025-08-19 15:00:25 - [32minfo[39m: [GrpcClient] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"], parsedConfig=[]
2025-08-19 15:00:25 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:00:25 - [32minfo[39m: [GrpcClient] Initialized gRPC client with bin session id: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252 and listen address: unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:00:25 - [32minfo[39m: [GrpcClient] startBinSession: Calling startBinSession
2025-08-19 15:00:25 - [32minfo[39m: [GrpcClient] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"], parsedConfig=[]
2025-08-19 15:00:26 - [32minfo[39m: [GrpcClient] StartBinSession successful
2025-08-19 15:00:26 - [32minfo[39m: [GrpcClient] StartBinSession successful
2025-08-19 15:00:26 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:00:26 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:26 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:00:26 - [32minfo[39m: [BrowserstackCLI] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"]
2025-08-19 15:00:26 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:00:26 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:26 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:00:26 - [32minfo[39m: [BrowserstackCLI] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"]
2025-08-19 15:00:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:35 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:00:35 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:00:36 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:00:36 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:00:36 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:36 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:00:36 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:00:36 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:00:36 - [32minfo[39m: Setting up TestInfo directory at /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log/.obs_test_details-undefined
2025-08-19 15:00:36 - [32minfo[39m: [PlaywrightTestFramework] trackPlaywrightInstance: created instance for target=68602:0, state=TestFrameworkState.INIT_TEST
2025-08-19 15:00:36 - [32minfo[39m: [PlaywrightTestFramework] trackPlaywrightInstance: saved instance contextId=f34c63d199fc2b214a6d4e84cde4f872dc58be04fb5cc8833adab8969adcd018 target=68602:0
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:00:52 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:52 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=68760:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=4f7d11c70d4955a1dd41cf8ea47c43b0d21da434fcbb04f15ed5f12d0f0e7d41 target=68760:0
2025-08-19 15:00:53 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=68763:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=adcdc505fd25bab04b9a3c007a583b99595a954aea6199e332c70b771cee4c6e target=68763:0
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:00:53 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=68762:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=2f3c79338cffcd5fdd0b775951d9d18f2bb09a46a4359b0538d9fd407f19839f target=68762:0
2025-08-19 15:00:53 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os_version":16,"device":"iPhone 14","real_mobile":true,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"safari","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=68757:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=82f01b9e1bbc9e9a56a1835f064029792efa2daf8c41914c0c6ea36109ab128a target=68757:0
2025-08-19 15:00:53 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=68761:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=839dc54468e911729a5b46f6bb8506b4cf78d107e7b3660a573c0c59056443e6 target=68761:0
2025-08-19 15:00:53 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=68756:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=725cf69d5cb1d54a4c674a0928166c22b0d3ebbcd0e9a9df3089a36efa6ea080 target=68756:0
2025-08-19 15:00:53 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"edge","browser_version":"latest","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=68759:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=f2b8f28e64e9364167440dd3ab3ae09357dbd56ca4f671566040c70d01285109 target=68759:0
2025-08-19 15:00:53 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:00:53 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=68758:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:00:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=44ebeda8b24d95183ac343e4288084d19f2b538b774154af54cbe95de979e322 target=68758:0
2025-08-19 15:00:53 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:00:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:00:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:00:56 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:00:56 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:00:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:00:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:00:57 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:00:57 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:00:57 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:00:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:00:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:00:57 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:00:57 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:00:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:00:58 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:00:58 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:00:58 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:00:58 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:01 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:01 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:01 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:01 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-a02ab29e91f16711c14a
2025-08-19 15:01:01 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'd17b178d-e8e8-4eee-b90d-553eae73384f',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'd17b178d-e8e8-4eee-b90d-553eae73384f',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-a02ab29e91f16711c14a',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:00:53.150Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-OSX-Monterey-browserstack1/test-failed-1.png'
    }
  ]
}
2025-08-19 15:01:01 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:01 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:02 - [32minfo[39m: getting screenshots results.
2025-08-19 15:01:02 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:01:02 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:01:02 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:01:02 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:01:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:02 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:01:02 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:01:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:03 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:03 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:03 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:03 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:01:03 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:01:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:03 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:01:03 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:01:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:06 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:06 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:06 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:06 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:06 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:06 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:06 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:01:06 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:01:06 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:07 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:07 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:07 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:07 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:14 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:01:14 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:01:14 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:01:14 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:01:14 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:01:14 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:01:14 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:01:15 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:01:15 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:01:15 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:01:15 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:01:15 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:01:15 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:01:15 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=69195:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:01:15 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=cb3907b381ae97353b9d8215f0124444c7fd7316990a9780fa802df8b535780f target=69195:0
2025-08-19 15:01:15 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:01:20 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:20 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:20 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:20 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:20 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-c0c6295118fa82688bd1
2025-08-19 15:01:20 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '4a04657c-c824-40bc-804c-cedc2b36b264',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '4a04657c-c824-40bc-804c-cedc2b36b264',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-c0c6295118fa82688bd1',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:00:53.165Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-Windows-11-browserstack1/test-failed-1.png'
    }
  ]
}
2025-08-19 15:01:20 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:20 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:20 - [32minfo[39m: getting screenshots results.
2025-08-19 15:01:20 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:01:20 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:01:20 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:01:20 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:01:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:24 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:01:24 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:01:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:26 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:26 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:26 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:26 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:33 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:01:33 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:01:33 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:01:33 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:01:33 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:01:33 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:01:33 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:01:33 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:01:33 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:01:33 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:01:33 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:01:33 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:01:33 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:01:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=69477:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:01:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=ff575e0cec997472b9055f9788741b66c3b571113e00a796ca4659e4c3b47d63 target=69477:0
2025-08-19 15:01:33 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:01:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:34 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:34 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:34 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:34 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:34 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:34 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:34 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-b37db3cf5b716db96e50
2025-08-19 15:01:34 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '8c14587a-1916-4d06-ae24-3dcb144f16e9',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '8c14587a-1916-4d06-ae24-3dcb144f16e9',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-b37db3cf5b716db96e50',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:00:53.138Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-OSX-Monterey-browserstack2/test-failed-1.png'
    }
  ]
}
2025-08-19 15:01:34 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:34 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:34 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-e7d2375fce32c3d9540e
2025-08-19 15:01:34 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '3842135c-0964-40c9-935d-3b0800f5017f',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '3842135c-0964-40c9-935d-3b0800f5017f',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-e7d2375fce32c3d9540e',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:01:15.103Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-8/e5c42f3622795f7db130e335550af054.png'
    }
  ]
}
2025-08-19 15:01:34 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:34 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:35 - [32minfo[39m: getting screenshots results.
2025-08-19 15:01:35 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:01:35 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:01:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:35 - [32minfo[39m: getting screenshots results.
2025-08-19 15:01:35 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:01:35 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:01:35 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:01:35 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:01:35 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:01:35 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:01:35 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:01:35 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:01:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:35 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:35 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:35 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:41 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:41 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:41 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:41 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:41 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-83ae7c7c28faebd9cd94
2025-08-19 15:01:41 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '98569a1b-5909-4ea2-84b7-1b255807e078',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '98569a1b-5909-4ea2-84b7-1b255807e078',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-83ae7c7c28faebd9cd94',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:01:35.184Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-8/3186ac9ad94fe9f61320da6617409d93.png'
    }
  ]
}
2025-08-19 15:01:41 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:41 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:42 - [32minfo[39m: getting screenshots results.
2025-08-19 15:01:42 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:01:42 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:01:42 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:01:42 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:01:42 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:42 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:42 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:42 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:42 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:42 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:42 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:42 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:42 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-071fc1371fa8ca11bf28
2025-08-19 15:01:42 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '9985d3ad-bbbb-4841-8730-96c345b892ba',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '9985d3ad-bbbb-4841-8730-96c345b892ba',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-071fc1371fa8ca11bf28',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:00:53.192Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-Windows-11-browserstack/test-failed-1.png'
    }
  ]
}
2025-08-19 15:01:42 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:42 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:42 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-77300ebaccc9eb33e40d
2025-08-19 15:01:42 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '5f8e02ee-4dc7-471e-a8d4-6c38399b010e',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '5f8e02ee-4dc7-471e-a8d4-6c38399b010e',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-77300ebaccc9eb33e40d',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:00:53.157Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-OSX-Monterey-browserstack/test-failed-1.png'
    }
  ]
}
2025-08-19 15:01:42 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:42 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:43 - [32minfo[39m: getting screenshots results.
2025-08-19 15:01:43 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:01:43 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:01:43 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:01:43 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:01:43 - [32minfo[39m: getting screenshots results.
2025-08-19 15:01:43 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:01:43 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:01:43 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:01:43 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:01:44 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:44 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:44 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:01:44 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:01:44 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:45 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:45 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:45 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:52 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:01:52 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:01:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:52 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:01:52 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:01:52 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:01:52 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:01:52 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:01:52 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:01:52 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:01:52 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:01:52 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:01:53 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:01:53 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:01:53 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:01:53 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:01:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=69827:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:01:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=dc4e353e536a17d86d80cc74bd2c51e7b5a21c250a55e8dda18fb466f8e492cb target=69827:0
2025-08-19 15:01:53 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:01:54 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:54 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:54 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:54 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:01:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:56 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:01:56 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:01:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:01:57 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:01:57 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:01:57 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:00 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:02:00 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:02:00 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:02:00 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:02:00 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:02:00 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:02:00 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:02:00 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:02:00 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:02:00 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:02:00 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:02:00 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:02:00 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:02:00 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:02:00 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:02:00 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:02:00 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:02:00 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:02:01 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:01 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:01 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:01 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:01 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:02:01 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:02:01 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:02:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=70079:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:02:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=02ed83fcb745634c6522b800df0e14fbf21aa02857b5e4cf8f02a25503841db4 target=70079:0
2025-08-19 15:02:01 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:02:01 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:02:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=70064:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:02:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=10c80d7a968969b531271343a565f1021cfb350ef5124e54eca474e47561c8e5 target=70064:0
2025-08-19 15:02:01 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:02:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:02 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:02 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:03 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:03 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-98b280cd54352e8039ec
2025-08-19 15:02:03 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'c9f414f6-8ae4-47af-b04f-48bd63595568',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'c9f414f6-8ae4-47af-b04f-48bd63595568',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-98b280cd54352e8039ec',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:01:53.020Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-10/d1eb5eda9238d0cd6a3395c76d08f5b5.png'
    }
  ]
}
2025-08-19 15:02:03 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:03 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:03 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-e9fc850381a6cda8352a
2025-08-19 15:02:03 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '91d270d9-9579-48a6-8fb0-037b3a9883be',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '91d270d9-9579-48a6-8fb0-037b3a9883be',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-e9fc850381a6cda8352a',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:00:53.155Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -Samsung Galaxy S22:12-browserstack-mobile consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 15:02:03 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:03 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:03 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:03 - [32minfo[39m: getting screenshots results.
2025-08-19 15:02:03 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:02:03 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:03 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:02:03 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:04 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:04 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:04 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:04 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:04 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:04 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:04 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:04 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:02:04 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:02:05 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:07 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:07 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:07 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:07 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:08 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-d39ddb6b0a15024fdf15
2025-08-19 15:02:08 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'a73edd90-59a6-4230-8c9b-a86b63b4f397',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'a73edd90-59a6-4230-8c9b-a86b63b4f397',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-d39ddb6b0a15024fdf15',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:01:33.472Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-9/a1c8fc6bb4e2180f60a01e598c641519.png'
    }
  ]
}
2025-08-19 15:02:08 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:08 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:08 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:08 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:08 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:08 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:08 - [32minfo[39m: getting screenshots results.
2025-08-19 15:02:08 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:02:08 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:08 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:02:08 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:08 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:08 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:08 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:09 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:09 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:09 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:09 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:09 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:09 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:09 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:09 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:09 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-3baaa8f56a58838ce64c
2025-08-19 15:02:09 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '8d33e6b1-633c-4f26-8869-b614c829dd11',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '8d33e6b1-633c-4f26-8869-b614c829dd11',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-3baaa8f56a58838ce64c',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:02:03.722Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-10/f26338ab98cd11889901531917d6feb2.png'
    }
  ]
}
2025-08-19 15:02:09 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:09 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:10 - [32minfo[39m: getting screenshots results.
2025-08-19 15:02:10 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:02:10 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:02:10 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:10 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:14 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:02:14 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:02:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:14 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:02:14 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:02:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:14 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:14 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:14 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:15 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-c683e62b80abae1594fd
2025-08-19 15:02:15 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '3536f6a3-536d-4f84-83d1-d99d25374d64',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '3536f6a3-536d-4f84-83d1-d99d25374d64',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-c683e62b80abae1594fd',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:02:08.498Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-9/89daa1a8e61c9e957e4613a941c3ba98.png'
    }
  ]
}
2025-08-19 15:02:15 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:15 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:15 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:15 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:15 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:15 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:15 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:15 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:15 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:15 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:15 - [32minfo[39m: getting screenshots results.
2025-08-19 15:02:15 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:02:15 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:02:15 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:15 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:23 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:23 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:23 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:23 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:23 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-66d4bd4e04104d6d436f
2025-08-19 15:02:23 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'b8c24db9-79db-4b65-978b-f556a3bbf4cb',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'b8c24db9-79db-4b65-978b-f556a3bbf4cb',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-66d4bd4e04104d6d436f',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:02:01.122Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-11/b431b950dda8f1c145125ab8ad808fcc.png'
    }
  ]
}
2025-08-19 15:02:23 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:23 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:23 - [32minfo[39m: getting screenshots results.
2025-08-19 15:02:23 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:02:23 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:23 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:02:23 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:23 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:23 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:23 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:24 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:24 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:24 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:26 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:26 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:26 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:26 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:27 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-e56bc7e395f0b4e1fc4e
2025-08-19 15:02:27 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '19e5aa92-317f-4d53-b498-2923a8b1fdc9',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '19e5aa92-317f-4d53-b498-2923a8b1fdc9',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-e56bc7e395f0b4e1fc4e',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:02:23.782Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-11/382b472ababf809552844f77bf13dd87.png'
    }
  ]
}
2025-08-19 15:02:27 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:27 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:27 - [32minfo[39m: getting screenshots results.
2025-08-19 15:02:27 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:02:27 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:02:27 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:27 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:28 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:28 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:29 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:29 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-36ccb61f1811542860a2
2025-08-19 15:02:29 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '9b65bdfc-c893-4379-b8f1-894ec1c9b32b',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '9b65bdfc-c893-4379-b8f1-894ec1c9b32b',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-36ccb61f1811542860a2',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible();\n' +
    '\n' +
    '    // Check that the title is present in the modal\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:00:53.190Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-Windows-11-browserstack2/test-failed-1.png'
    }
  ]
}
2025-08-19 15:02:29 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:29 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:29 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:29 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:29 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:29 - [32minfo[39m: getting screenshots results.
2025-08-19 15:02:29 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:02:29 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:02:29 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:29 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:30 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-56d63c4e1cf42aaf41b9
2025-08-19 15:02:30 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '61f92aac-e41b-420b-a260-50551f1a4619',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '61f92aac-e41b-420b-a260-50551f1a4619',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-56d63c4e1cf42aaf41b9',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:02:01.143Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-12/d53a9c18d2835606c6d1f1c690664f6d.png'
    }
  ]
}
2025-08-19 15:02:30 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:30 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:30 - [32minfo[39m: getting screenshots results.
2025-08-19 15:02:30 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:02:30 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:30 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:02:30 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:30 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:30 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:30 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:30 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:30 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:33 - [32minfo[39m: getting screenshots results.
2025-08-19 15:02:33 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:02:33 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:02:33 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:33 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:02:34 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:34 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:35 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:02:35 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-129e620f722b016b376c
2025-08-19 15:02:35 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '700a0592-f09a-4e8e-87e3-d73962c82bda',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '700a0592-f09a-4e8e-87e3-d73962c82bda',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-129e620f722b016b376c',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:02:30.510Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-12/62d32bb870210a96b9b598df662d0448.png'
    }
  ]
}
2025-08-19 15:02:35 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:02:35 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:02:35 - [32minfo[39m: getting screenshots results.
2025-08-19 15:02:35 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:02:35 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:02:35 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:35 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:50 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:02:50 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:02:50 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:02:51 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:02:51 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:02:51 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:02:51 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:02:51 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:02:51 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:02:51 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:51 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:51 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:02:51 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:02:51 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:02:51 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:02:51 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:02:51 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:02:51 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:02:51 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:02:51 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:02:51 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:02:51 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:02:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=71029:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:02:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=4fc77f85726f1499489ee5800a226394ac01a222c9116455e3b791f51ef78a47 target=71029:0
2025-08-19 15:02:51 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"edge","browser_version":"latest","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:02:51 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:02:51 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:02:51 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:02:51 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:02:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=71145:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:02:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=0f3be7555bb3f2eedbe843c519e8f8adb8d844fd887f26baef3c872dc3b71a76 target=71145:0
2025-08-19 15:03:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:01 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:03:01 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:03:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:01 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:03:01 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:03:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:14 - [32minfo[39m: getting screenshots results.
2025-08-19 15:03:14 - [32minfo[39m: getScreenshots: screenshot file not found, skipping attachment: /Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--iPhone-14-16-browserstack-mobile/test-failed-1.png
2025-08-19 15:03:14 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:03:14 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:03:14 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:03:14 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:03:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:24 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:03:24 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:03:24 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:03:26 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:03:26 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:03:26 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:03:26 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:03:26 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:03:26 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:03:26 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:03:26 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:03:26 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:03:27 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:03:27 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:03:27 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:03:27 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:03:27 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=71793:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:03:27 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=1248b44fdd03230fd7d42deb5873fcb1ca1c715d7703da8c40df64d4e4056c6a target=71793:0
2025-08-19 15:03:27 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os_version":16,"device":"iPhone 14","real_mobile":true,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"safari","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:03:32 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:32 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:03:32 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:03:33 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:03:33 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-7d990baff4d7419959f5
2025-08-19 15:03:33 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '782ed764-ef31-4a55-bc93-2e7b77ec355d',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '782ed764-ef31-4a55-bc93-2e7b77ec355d',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-7d990baff4d7419959f5',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:02:51.218Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-13/18cddac7b85fbfc0928dd974d94557b2.png'
    }
  ]
}
2025-08-19 15:03:33 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:03:33 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:03:33 - [32minfo[39m: getting screenshots results.
2025-08-19 15:03:33 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:03:33 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:03:33 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:03:33 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:03:33 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:03:33 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:03:33 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:34 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:34 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:03:34 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:03:34 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:03:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:35 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:03:35 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:03:35 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:03:35 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-1b9582a5232d3e872c1a
2025-08-19 15:03:35 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '84bb15e8-e4c0-4177-a505-4ab98674dcda',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '84bb15e8-e4c0-4177-a505-4ab98674dcda',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-1b9582a5232d3e872c1a',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:03:33.595Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 15:03:35 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:03:35 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:03:35 - [32minfo[39m: getting screenshots results.
2025-08-19 15:03:35 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:03:35 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:03:35 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:03:35 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:03:47 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:47 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:47 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:03:47 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:03:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:03:51 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:03:51 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:03:51 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:04:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:04:01 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-36d8402719eeff1ad25c
2025-08-19 15:04:01 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'c2f4f06b-e2fa-4103-ac93-48199f1e08b4',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'c2f4f06b-e2fa-4103-ac93-48199f1e08b4',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-36d8402719eeff1ad25c',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:02:51.495Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -Samsung Galaxy S22:12-browserstack-mobile consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked'
}
2025-08-19 15:04:01 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:04:01 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:04:31 - [32minfo[39m: getting screenshots results.
2025-08-19 15:04:31 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:04:31 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:04:31 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:04:31 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:04:50 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:04:50 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:04:50 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:04:50 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:04:50 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:04:50 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:04:50 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:04:51 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:04:51 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:04:51 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:04:51 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:04:51 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:04:51 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:04:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=72941:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:04:51 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=e241fb4ccf7cdaee690944c2e8a48114b10e498e76c8e17e0fa977e253c2985c target=72941:0
2025-08-19 15:05:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:05:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:05:03 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:05:03 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:05:10 - [32minfo[39m: getting screenshots results.
2025-08-19 15:05:10 - [32minfo[39m: getScreenshots: screenshot file not found, skipping attachment: /Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-b6fac-on-when-checkbox-is-checked--iPhone-14-16-browserstack-mobile/test-failed-1.png
2025-08-19 15:05:10 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:05:10 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:05:10 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:05:10 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:05:34 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:05:34 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-9e58c55e-fb51-4c79-8ea1-251ddf4b1252.sock
2025-08-19 15:05:34 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:05:34 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:05:34 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:05:34 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:05:34 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:05:35 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:05:35 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:05:35 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:05:35 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:05:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 9e58c55e-fb51-4c79-8ea1-251ddf4b1252
2025-08-19 15:05:35 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:05:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=73482:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:05:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=af1f05063fb878330897769edf1baf119f8d430e6afff39c1b148750839780e7 target=73482:0
2025-08-19 15:05:35 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#3","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os_version":16,"device":"iPhone 14","real_mobile":true,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"safari","browserstack.testhubBuildUuid":"08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:06:00 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:06:00 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:06:00 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:06:00 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:06:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:06:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:06:03 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-41f6515959a15335e91c
2025-08-19 15:06:03 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '49b1b280-33ab-4903-9478-3f169942cbdc',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '49b1b280-33ab-4903-9478-3f169942cbdc',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-41f6515959a15335e91c',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i')\n" +
    '      })).toBeVisible();\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:04:51.164Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -Samsung Galaxy S22:12-browserstack-mobile consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 15:06:03 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:06:03 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:06:04 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:06:04 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:06:04 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:06:04 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:06:33 - [32minfo[39m: getting screenshots results.
2025-08-19 15:06:33 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:06:33 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:06:33 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:06:33 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:07:12 - [32minfo[39m: getting screenshots results.
2025-08-19 15:07:12 - [32minfo[39m: getScreenshots: screenshot file not found, skipping attachment: /Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-c44ed-equired-consent-information--iPhone-14-16-browserstack-mobile/test-failed-1.png
2025-08-19 15:07:12 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:07:12 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:07:12 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:07:12 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:07:12 - [32minfo[39m: [BrowserstackCLI] stop: CLI stop triggered
2025-08-19 15:07:12 - [32minfo[39m: [BrowserstackCLI] stop: CLI stop triggered
2025-08-19 15:07:12 - [32minfo[39m: [GrpcClient] Stopping bin session
2025-08-19 15:07:12 - [32minfo[39m: [GrpcClient] Stopping bin session
2025-08-19 15:07:16 - [32minfo[39m: [GrpcClient] StopBinSession successful
2025-08-19 15:07:16 - [32minfo[39m: [GrpcClient] StopBinSession successful
2025-08-19 15:07:17 - [32minfo[39m: [BrowserstackCLI] stop: stopBinSession build_link=https://automate.browserstack.com/dashboard/v2/builds/ad38dea7019bdfa075f464872470c13e07b698ff hashed_id=ad38dea7019bdfa075f464872470c13e07b698ff o11y_uuid=08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4
2025-08-19 15:07:17 - [32minfo[39m: [BrowserstackCLI] Unconfiguring modules
2025-08-19 15:07:17 - [32minfo[39m: [BrowserstackCLI] stop: channel closed
2025-08-19 15:07:17 - [32minfo[39m: [BrowserstackCLI] stop: stopBinSession build_link=https://automate.browserstack.com/dashboard/v2/builds/ad38dea7019bdfa075f464872470c13e07b698ff hashed_id=ad38dea7019bdfa075f464872470c13e07b698ff o11y_uuid=08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4
2025-08-19 15:07:17 - [32minfo[39m: [BrowserstackCLI] Unconfiguring modules
2025-08-19 15:07:17 - [32minfo[39m: [BrowserstackCLI] stop: channel closed
2025-08-19 15:07:22 - [32minfo[39m: [BrowserstackCLI] stop: shutting down CLI
2025-08-19 15:07:22 - [32minfo[39m: [BrowserstackCLI] stop: shutting down CLI
2025-08-19 15:07:22 - [32minfo[39m: [BrowserstackCLI] stop: CLI process exited
2025-08-19 15:07:22 - [32minfo[39m: [BrowserstackCLI] stop: CLI process exited
2025-08-19 15:07:22 - [32minfo[39m: Visit https://automation.browserstack.com/builds/08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4 to view build report, insights, and many more debugging information all at one place!

2025-08-19 15:07:22 - [32minfo[39m: Visit https://automation.browserstack.com/builds/08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4 to view build report, insights, and many more debugging information all at one place!

2025-08-19 15:07:22 - [32minfo[39m: SDK run ended for id: 5f0c9ed9-6c93-4c4d-9a97-57baaf1aa424, testhub id: 08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4
2025-08-19 15:07:22 - [32minfo[39m: SDK run ended for id: 5f0c9ed9-6c93-4c4d-9a97-57baaf1aa424, testhub id: 08zvyspwoxallikpmfqyih1cyq5clnsyv5niwzb4
2025-08-19 15:07:32 - [32minfo[39m: Deleting /Users/nandi/Documents/projekte/DecentraSol/simple-todo/playwright-browserstack-sdk.config.cjs
2025-08-19 15:07:32 - [32minfo[39m: Deleting /Users/nandi/Documents/projekte/DecentraSol/simple-todo/playwright-browserstack-sdk.config.cjs
2025-08-19 15:07:34 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 15:07:34 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 15:12:09 - [32minfo[39m: Reading configs from /Users/nandi/Documents/projekte/DecentraSol/simple-todo/browserstack.yml
2025-08-19 15:12:09 - [32minfo[39m: Log Directory has been set to /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log
2025-08-19 15:12:09 - [32minfo[39m: Log Directory has been set to /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log
2025-08-19 15:12:09 - [32minfo[39m: Running SDK with args /Users/nandi/.nvm/versions/node/v20.19.4/bin/node /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/browserstack-node-sdk/src/bin/runner.js playwright test e2e/consent-screen.spec.js --config=playwright.browserstack.config.js
2025-08-19 15:12:09 - [32minfo[39m: SDK run started with id: c2a398b8-7841-4b77-8ee6-0467e3c0bd8f
2025-08-19 15:12:10 - [32minfo[39m: Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
2025-08-19 15:12:09 - [32minfo[39m: Running SDK with args /Users/nandi/.nvm/versions/node/v20.19.4/bin/node /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/browserstack-node-sdk/src/bin/runner.js playwright test e2e/consent-screen.spec.js --config=playwright.browserstack.config.js
2025-08-19 15:12:09 - [32minfo[39m: SDK run started with id: c2a398b8-7841-4b77-8ee6-0467e3c0bd8f
2025-08-19 15:12:10 - [32minfo[39m: Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
2025-08-19 15:12:12 - [32minfo[39m: [BrowserstackCLI] startMain: Starting main process
2025-08-19 15:12:12 - [32minfo[39m: [BrowserstackCLI] startMain: Starting main process
2025-08-19 15:12:12 - [32minfo[39m: [CLIUtils] Current CLI Path Found: /Users/nandi/.browserstack/cli/binary-macos-x64
2025-08-19 15:12:12 - [32minfo[39m: [CLIUtils] Current CLI Path Found: /Users/nandi/.browserstack/cli/binary-macos-x64
2025-08-19 15:12:17 - [32minfo[39m: [BrowserstackCLI] spawning command='/Users/nandi/.browserstack/cli/binary-macos-x64,sdk'
2025-08-19 15:12:17 - [32minfo[39m: [BrowserstackCLI] spawning command='/Users/nandi/.browserstack/cli/binary-macos-x64,sdk'
2025-08-19 15:12:19 - [32minfo[39m: [BrowserstackCLI] CLI params loaded: {"id":"832910b8-49ee-4711-b376-991c63ac36b1","listen":"unix:/tmp/sdk-platform-832910b8-49ee-4711-b376-991c63ac36b1.sock"}
2025-08-19 15:12:19 - [32minfo[39m: [BrowserstackCLI] CLI params loaded: {"id":"832910b8-49ee-4711-b376-991c63ac36b1","listen":"unix:/tmp/sdk-platform-832910b8-49ee-4711-b376-991c63ac36b1.sock"}
2025-08-19 15:12:19 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-832910b8-49ee-4711-b376-991c63ac36b1.sock
2025-08-19 15:12:19 - [32minfo[39m: [GrpcClient] Initialized gRPC client with bin session id: 832910b8-49ee-4711-b376-991c63ac36b1 and listen address: unix:/tmp/sdk-platform-832910b8-49ee-4711-b376-991c63ac36b1.sock
2025-08-19 15:12:19 - [32minfo[39m: [GrpcClient] startBinSession: Calling startBinSession
2025-08-19 15:12:19 - [32minfo[39m: [GrpcClient] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"], parsedConfig=[]
2025-08-19 15:12:19 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-832910b8-49ee-4711-b376-991c63ac36b1.sock
2025-08-19 15:12:19 - [32minfo[39m: [GrpcClient] Initialized gRPC client with bin session id: 832910b8-49ee-4711-b376-991c63ac36b1 and listen address: unix:/tmp/sdk-platform-832910b8-49ee-4711-b376-991c63ac36b1.sock
2025-08-19 15:12:19 - [32minfo[39m: [GrpcClient] startBinSession: Calling startBinSession
2025-08-19 15:12:19 - [32minfo[39m: [GrpcClient] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"], parsedConfig=[]
2025-08-19 15:12:22 - [32minfo[39m: [GrpcClient] StartBinSession successful
2025-08-19 15:12:22 - [32minfo[39m: [GrpcClient] StartBinSession successful
2025-08-19 15:12:22 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:12:22 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=832910b8-49ee-4711-b376-991c63ac36b1
2025-08-19 15:12:22 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:12:22 - [32minfo[39m: [BrowserstackCLI] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"]
2025-08-19 15:12:22 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:12:22 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=832910b8-49ee-4711-b376-991c63ac36b1
2025-08-19 15:12:22 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:12:22 - [32minfo[39m: [BrowserstackCLI] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"]
2025-08-19 15:13:00 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 832910b8-49ee-4711-b376-991c63ac36b1
2025-08-19 15:13:00 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-832910b8-49ee-4711-b376-991c63ac36b1.sock
2025-08-19 15:13:00 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:13:00 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:13:01 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:13:01 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=832910b8-49ee-4711-b376-991c63ac36b1
2025-08-19 15:13:01 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:13:01 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:13:01 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:13:02 - [32minfo[39m: [BrowserstackCLI] stop: CLI stop triggered
2025-08-19 15:13:02 - [32minfo[39m: [BrowserstackCLI] stop: CLI stop triggered
2025-08-19 15:13:02 - [32minfo[39m: [GrpcClient] Stopping bin session
2025-08-19 15:13:02 - [32minfo[39m: [GrpcClient] Stopping bin session
2025-08-19 15:13:13 - [32minfo[39m: [GrpcClient] StopBinSession successful
2025-08-19 15:13:13 - [32minfo[39m: [GrpcClient] StopBinSession successful
2025-08-19 15:13:13 - [32minfo[39m: [BrowserstackCLI] stop: stopBinSession build_link=null hashed_id=null o11y_uuid=1snym4baea4jr8oajzvvlovxpf9rbnjyawti4vks
2025-08-19 15:13:13 - [32minfo[39m: [BrowserstackCLI] Unconfiguring modules
2025-08-19 15:13:13 - [32minfo[39m: [BrowserstackCLI] stop: channel closed
2025-08-19 15:13:13 - [32minfo[39m: [BrowserstackCLI] stop: stopBinSession build_link=null hashed_id=null o11y_uuid=1snym4baea4jr8oajzvvlovxpf9rbnjyawti4vks
2025-08-19 15:13:13 - [32minfo[39m: [BrowserstackCLI] Unconfiguring modules
2025-08-19 15:13:13 - [32minfo[39m: [BrowserstackCLI] stop: channel closed
2025-08-19 15:13:18 - [32minfo[39m: [BrowserstackCLI] stop: shutting down CLI
2025-08-19 15:13:18 - [32minfo[39m: [BrowserstackCLI] stop: shutting down CLI
2025-08-19 15:13:18 - [32minfo[39m: [BrowserstackCLI] stop: CLI process exited
2025-08-19 15:13:18 - [32minfo[39m: [BrowserstackCLI] stop: CLI process exited
2025-08-19 15:13:18 - [32minfo[39m: Visit https://automation.browserstack.com/builds/1snym4baea4jr8oajzvvlovxpf9rbnjyawti4vks to view build report, insights, and many more debugging information all at one place!

2025-08-19 15:13:18 - [32minfo[39m: Visit https://automation.browserstack.com/builds/1snym4baea4jr8oajzvvlovxpf9rbnjyawti4vks to view build report, insights, and many more debugging information all at one place!

2025-08-19 15:13:18 - [32minfo[39m: SDK run ended for id: c2a398b8-7841-4b77-8ee6-0467e3c0bd8f, testhub id: 1snym4baea4jr8oajzvvlovxpf9rbnjyawti4vks
2025-08-19 15:13:18 - [32minfo[39m: SDK run ended for id: c2a398b8-7841-4b77-8ee6-0467e3c0bd8f, testhub id: 1snym4baea4jr8oajzvvlovxpf9rbnjyawti4vks
2025-08-19 15:13:20 - [32minfo[39m: Deleting /Users/nandi/Documents/projekte/DecentraSol/simple-todo/playwright-browserstack-sdk.config.cjs
2025-08-19 15:13:20 - [32minfo[39m: Deleting /Users/nandi/Documents/projekte/DecentraSol/simple-todo/playwright-browserstack-sdk.config.cjs
2025-08-19 15:13:21 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 15:13:21 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 15:16:06 - [32minfo[39m: Reading configs from /Users/nandi/Documents/projekte/DecentraSol/simple-todo/browserstack.yml
2025-08-19 15:16:06 - [32minfo[39m: Log Directory has been set to /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log
2025-08-19 15:16:06 - [32minfo[39m: Log Directory has been set to /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log
2025-08-19 15:16:06 - [32minfo[39m: Running SDK with args /Users/nandi/.nvm/versions/node/v20.19.4/bin/node /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/browserstack-node-sdk/src/bin/runner.js playwright test e2e/consent-screen.spec.js --config=playwright.browserstack.config.js
2025-08-19 15:16:06 - [32minfo[39m: SDK run started with id: d50f1843-a423-4910-81a0-d6df68aba37b
2025-08-19 15:16:06 - [32minfo[39m: Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
2025-08-19 15:16:06 - [32minfo[39m: Running SDK with args /Users/nandi/.nvm/versions/node/v20.19.4/bin/node /Users/nandi/Documents/projekte/DecentraSol/simple-todo/node_modules/browserstack-node-sdk/src/bin/runner.js playwright test e2e/consent-screen.spec.js --config=playwright.browserstack.config.js
2025-08-19 15:16:06 - [32minfo[39m: SDK run started with id: d50f1843-a423-4910-81a0-d6df68aba37b
2025-08-19 15:16:06 - [32minfo[39m: Project and debug logs are captured by default. To disable, set disableAutoCaptureLogs: true in config.
2025-08-19 15:16:08 - [32minfo[39m: [BrowserstackCLI] startMain: Starting main process
2025-08-19 15:16:08 - [32minfo[39m: [BrowserstackCLI] startMain: Starting main process
2025-08-19 15:16:08 - [32minfo[39m: [CLIUtils] Current CLI Path Found: /Users/nandi/.browserstack/cli/binary-macos-x64
2025-08-19 15:16:08 - [32minfo[39m: [CLIUtils] Current CLI Path Found: /Users/nandi/.browserstack/cli/binary-macos-x64
2025-08-19 15:16:09 - [32minfo[39m: [BrowserstackCLI] spawning command='/Users/nandi/.browserstack/cli/binary-macos-x64,sdk'
2025-08-19 15:16:09 - [32minfo[39m: [BrowserstackCLI] spawning command='/Users/nandi/.browserstack/cli/binary-macos-x64,sdk'
2025-08-19 15:16:10 - [32minfo[39m: [BrowserstackCLI] CLI params loaded: {"id":"437af936-8ecf-4224-a022-a33c66761b8e","listen":"unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock"}
2025-08-19 15:16:10 - [32minfo[39m: [BrowserstackCLI] CLI params loaded: {"id":"437af936-8ecf-4224-a022-a33c66761b8e","listen":"unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock"}
2025-08-19 15:16:10 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:16:10 - [32minfo[39m: [GrpcClient] Initialized gRPC client with bin session id: 437af936-8ecf-4224-a022-a33c66761b8e and listen address: unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:16:10 - [32minfo[39m: [GrpcClient] startBinSession: Calling startBinSession
2025-08-19 15:16:10 - [32minfo[39m: [GrpcClient] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"], parsedConfig=[]
2025-08-19 15:16:10 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:16:10 - [32minfo[39m: [GrpcClient] Initialized gRPC client with bin session id: 437af936-8ecf-4224-a022-a33c66761b8e and listen address: unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:16:10 - [32minfo[39m: [GrpcClient] startBinSession: Calling startBinSession
2025-08-19 15:16:10 - [32minfo[39m: [GrpcClient] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"], parsedConfig=[]
2025-08-19 15:16:11 - [32minfo[39m: [GrpcClient] StartBinSession successful
2025-08-19 15:16:11 - [32minfo[39m: [GrpcClient] StartBinSession successful
2025-08-19 15:16:11 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:16:11 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:11 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:16:11 - [32minfo[39m: [BrowserstackCLI] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"]
2025-08-19 15:16:11 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:16:11 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:11 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:16:11 - [32minfo[39m: [BrowserstackCLI] setCliArgs: cliArgs=["playwright","test","e2e/consent-screen.spec.js"]
2025-08-19 15:16:28 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:28 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:16:28 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:16:28 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:16:28 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:16:28 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:28 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:16:28 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:16:28 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:16:29 - [32minfo[39m: Setting up TestInfo directory at /Users/nandi/Documents/projekte/DecentraSol/simple-todo/log/.obs_test_details-undefined
2025-08-19 15:16:29 - [32minfo[39m: [PlaywrightTestFramework] trackPlaywrightInstance: created instance for target=84080:0, state=TestFrameworkState.INIT_TEST
2025-08-19 15:16:29 - [32minfo[39m: [PlaywrightTestFramework] trackPlaywrightInstance: saved instance contextId=1f279324481fa73d8d474a0dec6021a8629fc11b335e49f0ec90774f47edc87a target=84080:0
2025-08-19 15:16:47 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:47 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:47 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:47 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:47 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:47 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:47 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:47 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:16:47 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:16:47 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:16:47 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:16:48 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=84293:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=588b213d3244dfabf60e449f0413f0a8ea29027b1b289d5e03745b6ca41fbd10 target=84293:0
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=84295:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=95711a046e038cba511f000a2369d8e7c5f70a2ab614696be117372e35aa9397 target=84295:0
2025-08-19 15:16:48 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os_version":16,"device":"iPhone 14","real_mobile":true,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"safari","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=84297:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=b9d970a919e7c28b838a95cc72bfbfa90eefdbde736434c73ee5fc57397bcc1d target=84297:0
2025-08-19 15:16:48 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=84294:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=05e918a3b8d742c3121918a213f0e6d405e453fcdd877984cb3a9edc26321c6d target=84294:0
2025-08-19 15:16:48 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=84298:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=67c52eeabafc643e8cb69b0a174f21cedd1d0aba7f6fbad66373795961ccca04 target=84298:0
2025-08-19 15:16:48 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"edge","browser_version":"latest","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=84296:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=064a30c77c406af68205ad916b78db330fcd10b65a67601af91316168bd248e9 target=84296:0
2025-08-19 15:16:48 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=84292:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=c5bba1afc7e9c0b19c3288e92b1c37ead01ca7a09d8cf46828cb9aeb8834a427 target=84292:0
2025-08-19 15:16:48 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:16:48 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=84291:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:16:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=bdafc14ea42f7ee7dba6c4d0a488fef7a6f4eba69362d866cab6d76aede76342 target=84291:0
2025-08-19 15:16:48 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:16:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:52 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:16:52 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:16:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:52 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:16:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:52 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:16:52 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:53 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:16:53 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:16:53 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:16:53 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:53 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:16:53 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:16:53 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:16:56 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:56 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:16:56 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:16:56 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:16:56 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-a02ab29e91f16711c14a
2025-08-19 15:16:56 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'a52c5a33-a6c1-42e6-9f06-5ea2c82eefd2',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'a52c5a33-a6c1-42e6-9f06-5ea2c82eefd2',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-a02ab29e91f16711c14a',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible({\n' +
    '      timeout: 30000\n' +
    '    });\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:16:48.337Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-OSX-Monterey-browserstack1/test-failed-1.png'
    }
  ]
}
2025-08-19 15:16:56 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:16:56 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:16:57 - [32minfo[39m: getting screenshots results.
2025-08-19 15:16:57 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:16:57 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:16:57 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:16:57 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:16:58 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:58 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:58 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:16:58 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:16:59 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:59 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:59 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:16:59 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:16:59 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:59 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:59 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:16:59 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:16:59 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:16:59 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:59 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:16:59 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:16:59 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:17:00 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:02 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:17:02 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:17:02 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:17:08 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:17:08 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:17:08 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:17:08 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:17:08 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:17:08 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:17:08 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:17:09 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:17:09 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:17:09 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:17:09 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:17:09 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:17:09 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:17:09 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=84714:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:17:09 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=4481557ac3f5c6b64894a492c3f7a4d267dc7916d2f20dc0d7a373da50005f37 target=84714:0
2025-08-19 15:17:09 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:17:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:10 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:17:10 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:17:10 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:17:10 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-c0c6295118fa82688bd1
2025-08-19 15:17:10 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'b4ab177d-2aa4-49b2-a855-3b66437fc507',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'b4ab177d-2aa4-49b2-a855-3b66437fc507',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-c0c6295118fa82688bd1',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible({\n' +
    '      timeout: 30000\n' +
    '    });\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:16:48.313Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-Windows-11-browserstack1/test-failed-1.png'
    }
  ]
}
2025-08-19 15:17:10 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:17:10 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:17:10 - [32minfo[39m: getting screenshots results.
2025-08-19 15:17:10 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:17:10 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:17:10 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:17:11 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:17:21 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:17:21 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:17:21 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:17:21 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:17:21 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:17:21 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:17:21 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:17:21 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:17:21 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:17:21 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:17:21 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:17:21 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:17:21 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:17:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=84925:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:17:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=cacc3039fd830bf7180ad16071e4b170e395110ef689077663e28ed2e3c8f03a target=84925:0
2025-08-19 15:17:21 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-firefox","browser_version":"latest","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:17:22 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:22 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:22 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:17:22 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:17:23 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:25 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:25 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:17:25 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:17:25 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:17:27 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:28 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:17:28 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:17:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:29 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:17:29 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:17:29 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:17:32 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:32 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:17:32 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:17:33 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:17:33 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-77300ebaccc9eb33e40d
2025-08-19 15:17:33 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '1ffb610d-649c-4a08-96f6-43121f00780c',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '1ffb610d-649c-4a08-96f6-43121f00780c',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-77300ebaccc9eb33e40d',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible({\n' +
    '      timeout: 30000\n' +
    '    });\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:16:48.316Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-OSX-Monterey-browserstack/test-failed-1.png'
    }
  ]
}
2025-08-19 15:17:33 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:17:33 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:17:33 - [32minfo[39m: getting screenshots results.
2025-08-19 15:17:33 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:17:33 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:17:33 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:17:33 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:17:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:37 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:17:37 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:17:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:37 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:17:37 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:17:37 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:17:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:38 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-071fc1371fa8ca11bf28
2025-08-19 15:17:38 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '0f9b238d-6252-447d-837a-2129463fd27b',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '0f9b238d-6252-447d-837a-2129463fd27b',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-071fc1371fa8ca11bf28',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible({\n' +
    '      timeout: 30000\n' +
    '    });\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:16:48.327Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-Windows-11-browserstack/test-failed-1.png'
    }
  ]
}
2025-08-19 15:17:38 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:17:38 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:17:38 - [32minfo[39m: getting screenshots results.
2025-08-19 15:17:38 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:17:38 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:17:38 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:17:38 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:17:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:38 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:17:38 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:17:38 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:17:42 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:17:42 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:17:42 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:17:42 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:17:42 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:17:42 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:17:42 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:17:42 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:17:42 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:17:42 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:17:42 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:17:42 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:17:42 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:17:42 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=85258:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:17:42 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=aa6d8159f59c0ec2c344ef64eff619409dd16282676286521461c46e98040bf7 target=85258:0
2025-08-19 15:17:42 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:17:46 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:17:46 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:17:46 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:17:46 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:17:46 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:17:46 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:17:46 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:17:46 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:17:46 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:17:46 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:17:46 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:17:46 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:17:46 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:17:46 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=85319:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:17:46 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=2ec8abd94953d4a3d1189adb4b3a8b9004ef86deb874e979f6d557e01676892f target=85319:0
2025-08-19 15:17:46 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"chrome","browser_version":"latest","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:17:47 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:47 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:47 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:17:47 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:17:47 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:49 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:49 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:17:49 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:17:49 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:17:58 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:17:58 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-e9fc850381a6cda8352a
2025-08-19 15:17:58 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'bf140730-0c9e-4438-ac14-8539ec78fc8d',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'bf140730-0c9e-4438-ac14-8539ec78fc8d',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-e9fc850381a6cda8352a',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible({\n' +
    '      timeout: 30000\n' +
    '    });\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:16:48.292Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -Samsung Galaxy S22:12-browserstack-mobile consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes'
}
2025-08-19 15:17:58 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:17:58 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:01 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:01 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:01 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:01 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:02 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-d39ddb6b0a15024fdf15
2025-08-19 15:18:02 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '6e9842a9-7d87-4ad4-aaf9-2678dcc2e62c',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '6e9842a9-7d87-4ad4-aaf9-2678dcc2e62c',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-d39ddb6b0a15024fdf15',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:17:21.225Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-9/a779ef1d50292b509ee2c82e3988c3d2.png'
    }
  ]
}
2025-08-19 15:18:02 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:02 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:02 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:18:02 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:18:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:02 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:02 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:02 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:02 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:02 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:02 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:02 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:02 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:03 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:03 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:03 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:03 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:03 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:03 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:10 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:10 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:10 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:10 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:10 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:10 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:10 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-36ccb61f1811542860a2
2025-08-19 15:18:10 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'b5045829-d0af-4a28-8b90-7962370d5f11',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'b5045829-d0af-4a28-8b90-7962370d5f11',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-36ccb61f1811542860a2',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible({\n' +
    '      timeout: 30000\n' +
    '    });\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:16:48.323Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-Windows-11-browserstack2/test-failed-1.png'
    }
  ]
}
2025-08-19 15:18:10 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:10 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:10 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-c683e62b80abae1594fd
2025-08-19 15:18:10 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'e8b608f1-30ed-4f34-8a1c-e2049209e310',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'e8b608f1-30ed-4f34-8a1c-e2049209e310',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-c683e62b80abae1594fd',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\\\\\$\\\\u0026'), 'i')\n" +
    '      })).toBeVisible({\n' +
    '        timeout: 30000\n' +
    '      });\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:18:02.793Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-9/d9d264371852adc7a49f9c5faa7bb8e8.png'
    }
  ]
}
2025-08-19 15:18:10 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:10 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:10 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:10 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:10 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:10 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:11 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:11 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:11 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-66d4bd4e04104d6d436f
2025-08-19 15:18:11 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '72dd12e5-eff9-4c2d-b006-294644e39610',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '72dd12e5-eff9-4c2d-b006-294644e39610',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-66d4bd4e04104d6d436f',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:17:42.615Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-10/bb52f2a4bb0b46e41558cbc66ca12a51.png'
    }
  ]
}
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:11 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:11 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:11 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:12 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:12 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:12 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:12 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:14 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:14 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:14 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:14 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-e56bc7e395f0b4e1fc4e
2025-08-19 15:18:14 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'a92933d2-5fbb-4e61-a349-d4ab9eaab18f',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'a92933d2-5fbb-4e61-a349-d4ab9eaab18f',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-e56bc7e395f0b4e1fc4e',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\\\\\$\\\\u0026'), 'i')\n" +
    '      })).toBeVisible({\n' +
    '        timeout: 30000\n' +
    '      });\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:18:11.674Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-10/cf7c51a32cd901358d011a4e747d341a.png'
    }
  ]
}
2025-08-19 15:18:14 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:14 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:14 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:14 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:14 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:14 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:14 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:14 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:14 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:18:14 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:18:15 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:16 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:16 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:16 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:16 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:18 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:18 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-b37db3cf5b716db96e50
2025-08-19 15:18:18 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '7b19bede-ac07-49eb-9257-5cf6cb7f6349',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '7b19bede-ac07-49eb-9257-5cf6cb7f6349',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-b37db3cf5b716db96e50',
  test_name: 'should display consent modal and allow proceeding after checking all boxes',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:34',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that the consent modal is visible\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).toBeVisible({\n' +
    '      timeout: 30000\n' +
    '    });\n' +
    "    await expect(modal.locator('h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check that all required checkboxes are present and initially unchecked\n' +
    `    const checkboxes = page.locator('input[type="checkbox"]').first(); // Get container for consent checkboxes\n` +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '\n' +
    '    // Verify all checkboxes are unchecked initially\n' +
    '    await expect(relayConnectionCheckbox).not.toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).not.toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).not.toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).not.toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is disabled initially\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Please check all boxes to continue/\n' +
    '    });\n' +
    '    await expect(proceedButton).toBeDisabled();\n' +
    '\n' +
    '    // Check each required checkbox\n' +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Verify all checkboxes are now checked\n' +
    '    await expect(relayConnectionCheckbox).toBeChecked();\n' +
    '    await expect(dataVisibilityCheckbox).toBeChecked();\n' +
    '    await expect(globalDatabaseCheckbox).toBeChecked();\n' +
    '    await expect(replicationTestingCheckbox).toBeChecked();\n' +
    '\n' +
    '    // Check that the proceed button is now enabled and text changed\n' +
    "    const enabledProceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await expect(enabledProceedButton).toBeEnabled();\n' +
    '\n' +
    '    // Click the proceed button\n' +
    '    await enabledProceedButton.click();\n' +
    '\n' +
    '    // Wait for modal to close and main app to be visible\n' +
    '    await expect(modal).not.toBeVisible();\n' +
    '\n' +
    '    // Check that the main app content is now visible (outside the modal)\n' +
    "    await expect(page.locator('main h1').filter({\n" +
    "      hasText: 'Simple TODO Example'\n" +
    '    })).toBeVisible();\n' +
    '\n' +
    '    // Check for the loading spinner or main app content\n' +
    "    const loadingSpinner = page.locator('text=Initializing P2P connection');\n" +
    `    const addTodoForm = page.locator('input[placeholder*="todo"], input[placeholder*="Todo"], input[placeholder*="task"]');\n` +
    '\n' +
    '    // Either loading spinner should be visible, or the todo form should be visible\n' +
    '    await expect(loadingSpinner.or(addTodoForm)).toBeVisible();\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:16:48.310Z',
  test_scope: 'Consent Screen - should display consent modal and allow proceeding after checking all boxes',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display consent modal and allow proceeding after checking all boxes',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--latest-OSX-Monterey-browserstack2/test-failed-1.png'
    }
  ]
}
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:18 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:18:18 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:18:18 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:18:18 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:18:18 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:18 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:18 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:18:18 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:18:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=85800:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:18:18 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=dae5ae23e4977cd9b0b40381fb5a180840c38b3e424102164ac341e7b7db3115 target=85800:0
2025-08-19 15:18:18 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"Windows","os_version":11,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"edge","browser_version":"latest","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:18:20 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:20 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:20 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:18:20 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:18:20 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:21 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:21 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:21 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:21 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:24 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:24 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:24 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:24 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-e7d2375fce32c3d9540e
2025-08-19 15:18:24 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'a7bd4537-c9e6-4c4f-a217-f9e45b2dfab7',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'a7bd4537-c9e6-4c4f-a217-f9e45b2dfab7',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-e7d2375fce32c3d9540e',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:17:09.096Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-8/2144ac158edf586665b205bc34c444bb.png'
    }
  ]
}
2025-08-19 15:18:24 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:24 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:24 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:24 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:24 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:24 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:24 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:24 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:24 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:24 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:25 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:25 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:25 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:25 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:25 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:18:25 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:18:25 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:18:25 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:18:25 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:18:25 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:18:25 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:18:25 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:18:25 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:18:25 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:25 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:25 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:18:25 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:18:26 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=85922:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:18:26 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=521fd2a6e062a608aebc7491b4d6ec60fe0f4b649a1b86cde922ce65477813c7 target=85922:0
2025-08-19 15:18:26 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os":"OS X","os_version":"Monterey","browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"playwright-webkit","browser_version":"latest","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:18:27 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:27 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:27 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:18:27 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:18:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:28 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:28 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:28 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:28 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:28 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:28 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:28 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:28 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:28 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:28 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:18:28 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:18:28 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:28 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:29 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-83ae7c7c28faebd9cd94
2025-08-19 15:18:29 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '9d1d05a3-f3f3-4750-a6bc-c5e839ca44f8',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '9d1d05a3-f3f3-4750-a6bc-c5e839ca44f8',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-83ae7c7c28faebd9cd94',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\\\\\$\\\\u0026'), 'i')\n" +
    '      })).toBeVisible({\n' +
    '        timeout: 30000\n' +
    '      });\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:18:24.810Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-8/ce99de07e05dcb79092a52e123240380.png'
    }
  ]
}
2025-08-19 15:18:29 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:29 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:29 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:29 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:29 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:29 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:29 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:29 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:29 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:29 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:29 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:30 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:30 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:30 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:31 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:31 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-56d63c4e1cf42aaf41b9
2025-08-19 15:18:31 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '39ef1c6c-1fc1-488d-a41e-42e85315de99',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '39ef1c6c-1fc1-488d-a41e-42e85315de99',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-56d63c4e1cf42aaf41b9',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:17:46.892Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-11/8a81265158420e66149e39586c764e66.png'
    }
  ]
}
2025-08-19 15:18:31 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:31 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:31 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:31 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:31 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:31 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:31 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:31 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:31 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:31 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:32 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:32 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:32 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:32 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:33 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:33 - [32minfo[39m: getScreenshots: screenshot file not found, skipping attachment: /Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-9f22e-ng-after-checking-all-boxes--iPhone-14-16-browserstack-mobile/test-failed-1.png
2025-08-19 15:18:33 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:33 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:33 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:33 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:18:35 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:18:35 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:18:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:35 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:35 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:35 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:18:35 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:18:35 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:18:35 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:18:35 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:35 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:18:35 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:18:35 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:35 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:35 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:18:35 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-129e620f722b016b376c
2025-08-19 15:18:35 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'c27a4758-c082-4e99-87b7-4ba9f48cd888',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'c27a4758-c082-4e99-87b7-4ba9f48cd888',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-129e620f722b016b376c',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\\\\\$\\\\u0026'), 'i')\n" +
    '      })).toBeVisible({\n' +
    '        timeout: 30000\n' +
    '      });\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:18:31.672Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-11/e4033f633b1736b720eaa2bc81a9fc7d.png'
    }
  ]
}
2025-08-19 15:18:35 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:35 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:35 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:18:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=86072:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:18:35 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=06c2694cf4ca8ce861bfdc748351d27910825edfe83155f2b777c5f7a46d5cea target=86072:0
2025-08-19 15:18:36 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:36 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:36 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:36 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:36 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:37 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:37 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-7d990baff4d7419959f5
2025-08-19 15:18:37 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '1f34d837-bddf-4a3a-b111-dac55d9ac36a',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '1f34d837-bddf-4a3a-b111-dac55d9ac36a',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-7d990baff4d7419959f5',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:18:18.878Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-12/e17439c5f13e36617743c22644a3e5c2.png'
    }
  ]
}
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:37 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:37 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:37 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:37 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-98b280cd54352e8039ec
2025-08-19 15:18:37 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'a987c3e2-0927-45ae-ba30-516d64619396',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'a987c3e2-0927-45ae-ba30-516d64619396',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-98b280cd54352e8039ec',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:18:25.976Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-13/b6155610f97a683f489b61585647403a.png'
    }
  ]
}
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:37 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:38 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:38 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:38 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:38 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:38 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:38 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:38 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:38 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:38 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:38 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:38 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:38 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:38 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:40 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:40 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:40 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:40 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:41 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-3baaa8f56a58838ce64c
2025-08-19 15:18:41 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '80c2dc4c-950b-4b15-8ea7-d83c8e72bd4b',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '80c2dc4c-950b-4b15-8ea7-d83c8e72bd4b',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-3baaa8f56a58838ce64c',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\\\\\$\\\\u0026'), 'i')\n" +
    '      })).toBeVisible({\n' +
    '        timeout: 30000\n' +
    '      });\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:18:38.253Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:OSX Monterey-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-13/e6f4c4c202a5cc8349454fb3a21d52a4.png'
    }
  ]
}
2025-08-19 15:18:41 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:41 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:41 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:41 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:41 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:41 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:41 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:42 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:18:42 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:18:42 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:18:42 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:18:42 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:18:42 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:18:42 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:18:42 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:18:42 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:18:42 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:42 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:18:42 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:18:42 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:18:42 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=86136:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:18:42 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=75776e1cfc451d70f364f0e81027e45c75c114542e0c0d684088ad64996bcb92 target=86136:0
2025-08-19 15:18:42 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os_version":16,"device":"iPhone 14","real_mobile":true,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"safari","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:18:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:45 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:18:45 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:18:48 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:18:48 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:48 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:48 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:18:48 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-1b9582a5232d3e872c1a
2025-08-19 15:18:48 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: 'a3a45cdb-32f1-4ca6-9810-54b7abea1deb',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: 'a3a45cdb-32f1-4ca6-9810-54b7abea1deb',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-1b9582a5232d3e872c1a',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\\\\\$\\\\u0026'), 'i')\n" +
    '      })).toBeVisible({\n' +
    '        timeout: 30000\n' +
    '      });\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:18:37.663Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -latest:Windows 11-browserstack consent-screen.spec.js Consent Screen should display all required consent information',
  attachments: [
    {
      name: 'screenshot',
      path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/.playwright-artifacts-12/44ec6b09f3b0e7cd617a4783c3180d5d.png'
    }
  ]
}
2025-08-19 15:18:48 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:18:48 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:18:48 - [32minfo[39m: getting screenshots results.
2025-08-19 15:18:48 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:18:48 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:18:48 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:18:48 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:19:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:19:03 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:19:03 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:19:03 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:19:04 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:19:06 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:19:06 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:19:06 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:19:07 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:19:45 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:19:45 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-36d8402719eeff1ad25c
2025-08-19 15:19:45 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '533ac7ec-27d9-405f-b4cd-65a688ca001f',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '533ac7ec-27d9-405f-b4cd-65a688ca001f',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-36d8402719eeff1ad25c',
  test_name: 'should remember consent decision when checkbox is checked',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:102',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    `    // Check the "Don't show this again" checkbox\n` +
    "    const rememberCheckbox = page.locator('label').filter({\n" +
    "      hasText: /Don't show this again/\n" +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await rememberCheckbox.check();\n' +
    '\n' +
    '    // Check all required consent checkboxes\n' +
    "    const relayConnectionCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application is a demo app/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const dataVisibilityCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that the relay may store the entered data/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const globalDatabaseCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that this todo application works with one global unencrypted database/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    "    const replicationTestingCheckbox = page.locator('label').filter({\n" +
    '      hasText: /I understand that I need to open a second browser/\n' +
    `    }).locator('input[type="checkbox"]');\n` +
    '    await relayConnectionCheckbox.check();\n' +
    '    await dataVisibilityCheckbox.check();\n' +
    '    await globalDatabaseCheckbox.check();\n' +
    '    await replicationTestingCheckbox.check();\n' +
    '\n' +
    '    // Click proceed\n' +
    "    const proceedButton = page.locator('button').filter({\n" +
    '      hasText: /Proceed to Test the App/\n' +
    '    });\n' +
    '    await proceedButton.click();\n' +
    '\n' +
    '    // Wait for the app to load\n' +
    '    await page.waitForTimeout(2000);\n' +
    '\n' +
    '    // Reload the page\n' +
    '    await page.reload();\n' +
    '\n' +
    '    // The consent modal should not appear again\n' +
    "    const modal = page.locator('div.fixed.inset-0.z-50');\n" +
    '    await expect(modal).not.toBeVisible({\n' +
    '      timeout: 5000\n' +
    '    });\n' +
    '\n' +
    '    // Clean up localStorage for next test\n' +
    '    await page.evaluate(() => {\n' +
    '      localStorage.clear();\n' +
    '    });\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:18:35.804Z',
  test_scope: 'Consent Screen - should remember consent decision when checkbox is checked',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -Samsung Galaxy S22:12-browserstack-mobile consent-screen.spec.js Consent Screen should remember consent decision when checkbox is checked'
}
2025-08-19 15:19:45 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:19:45 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:20:15 - [32minfo[39m: getting screenshots results.
2025-08-19 15:20:15 - [32minfo[39m: getScreenshots: screenshot file not found, skipping attachment: /Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-b6fac-on-when-checkbox-is-checked--iPhone-14-16-browserstack-mobile/test-failed-1.png
2025-08-19 15:20:15 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:20:15 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:20:15 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:20:15 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:20:15 - [32minfo[39m: getting screenshots results.
2025-08-19 15:20:15 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:20:15 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:20:15 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:20:15 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:20:28 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:20:28 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] Connected to gRPC server at unix:/tmp/sdk-platform-437af936-8ecf-4224-a022-a33c66761b8e.sock
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] Connecting bin session
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] ConnectBinSession successful
2025-08-19 15:20:28 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:20:28 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:20:28 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:20:28 - [32minfo[39m: [BrowserstackCLI] loadModules: Loading modules
2025-08-19 15:20:28 - [32minfo[39m: [BrowserstackCLI] loadModules: binSessionId=437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:20:28 - [32minfo[39m: [BrowserstackCLI] loading Modules.
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] Getting Playwright config
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] PlaywrightConfig request successful
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:20:28 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:20:28 - [32minfo[39m: [BrowserstackCLI] Starting as child process with session ID: 437af936-8ecf-4224-a022-a33c66761b8e
2025-08-19 15:20:28 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:20:28 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:20:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=87629:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:20:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=79166b11cc8b71343609eb3864394d38e728b0153f211762ec43f9275b8ea629 target=87629:0
2025-08-19 15:20:28 - [32minfo[39m: Processed accessibility caps false {"browserstack.user":"nicokrause_e7ZdSC","browserstack.key":"Y4dYUsBFz5cWEHa5inCP","project":"Simple Todo Consent Screen Tests","build":"https://simple-todo.le-space.de","browserstack.buildIdentifier":"#5","browserstack.source":"simple-todo-consent-tests:v1.0.0","browserstack.debug":true,"browserstack.networkLogs":true,"browserstack.console":"errors","turboScaleOptions":{},"os_version":16,"device":"iPhone 14","real_mobile":true,"browserstack.hostName":"Nicos-MacBook-Pro-2.local","browserstack.browserstackSDK":"Playwright-nodeagent/1.41.1","browserstack.buildProductMap":{"observability":true,"accessibility":false,"percy":false,"automate":true,"app_automate":false},"browserstack.use_w3c":false,"browser":"safari","browserstack.testhubBuildUuid":"m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk","browserstack.local":false,"browserstack.localIdentifier":null} 
2025-08-19 15:20:28 - [32minfo[39m: [BrowserstackCLI] startChild: client and channel already exist, stopping here
2025-08-19 15:20:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: created instance for target=87630:0, state=AutomationFrameworkState.CREATE
2025-08-19 15:20:28 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: saved instance contextId=0677dae59dcee4a72b90a51c1765ae47912318bdad4fda70ff4803eb946657ef target=87630:0
2025-08-19 15:20:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:20:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:20:38 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:20:38 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:20:54 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:20:54 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:20:54 - [32minfo[39m: [GrpcClient] Sending DriverInit
2025-08-19 15:20:54 - [32minfo[39m: [GrpcClient] DriverInit request successful
2025-08-19 15:20:55 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:20:57 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:20:57 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:20:57 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:20:57 - [32minfo[39m: [ObservabilityModule] onBeforeTest: TEST REPORTING AND ANALYTICS sync done
2025-08-19 15:21:38 - [32minfo[39m: [PlaywrightAutomationFramework] trackPlaywrightInstance: instance already exists
2025-08-19 15:21:38 - [32minfo[39m: [PlaywrightDriverModule] testId: deaaa7a0d6cf9ce3e4c4-41f6515959a15335e91c
2025-08-19 15:21:38 - [32minfo[39m: [PlaywrightDriverModule] testData from onAfterTest: {
  uuid: '86bbb94c-59c1-44ba-ba20-8875edfc5fab',
  test_framework_name: 'Playwright',
  test_framework_version: '1.47.0',
  test_logs: [],
  test_hooks_finished: {},
  test_hooks_started: {},
  test_uuid: '86bbb94c-59c1-44ba-ba20-8875edfc5fab',
  test_result: 'pending',
  automate_session_name: 'Consent Screen - should display all required consent information',
  test_file_path: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js',
  test_id: 'deaaa7a0d6cf9ce3e4c4-41f6515959a15335e91c',
  test_name: 'should display all required consent information',
  test_location: '/Users/nandi/Documents/projekte/DecentraSol/simple-todo/e2e/consent-screen.spec.js:148',
  test_code: 'async ({\n' +
    '    page\n' +
    '  }) => {\n' +
    '    // Navigate to the app - use deployed URL for BrowserStack, baseURL for local\n' +
    "    const testUrl = process.env.BROWSERSTACK_BUILD_NAME ? 'https://simple-todo.le-space.de' : '/';\n" +
    '    await page.goto(testUrl);\n' +
    '\n' +
    '    // Clear localStorage for BrowserStack tests to ensure modal appears\n' +
    '    if (process.env.BROWSERSTACK_BUILD_NAME) {\n' +
    '      await page.evaluate(() => localStorage.clear());\n' +
    '      await page.reload();\n' +
    '    }\n' +
    '\n' +
    '    // Check that all expected features are listed\n' +
    "    const expectedFeatures = ['Does not store any cookies or perform any tracking', 'Does not store any data in your browser\\'s storage', 'Stores data temporarily in your browser\\'s memory only', 'Does not use any application or database server', 'Connects to at least one relay server', 'The relay server may cache your entered data', 'hosted on the IPFS network'];\n" +
    '    for (const feature of expectedFeatures) {\n' +
    "      await expect(page.locator('li').filter({\n" +
    "        hasText: new RegExp(feature.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\\\\\$\\\\u0026'), 'i')\n" +
    '      })).toBeVisible({\n' +
    '        timeout: 30000\n' +
    '      });\n' +
    '    }\n' +
    '  }',
  test_tags: [],
  test_started_at: '2025-08-19T13:20:28.202Z',
  test_scope: 'Consent Screen - should display all required consent information',
  test_scopes: [ 'Consent Screen' ],
  test_rerun_name: ' -Samsung Galaxy S22:12-browserstack-mobile consent-screen.spec.js Consent Screen should display all required consent information'
}
2025-08-19 15:21:38 - [32minfo[39m: [GrpcClient] Sending TestSessionEvent
2025-08-19 15:21:38 - [32minfo[39m: [GrpcClient] TestSessionEvent request successful
2025-08-19 15:22:05 - [32minfo[39m: getting screenshots results.
2025-08-19 15:22:05 - [32minfo[39m: getScreenshots: screenshot file not found, skipping attachment: /Users/nandi/Documents/projekte/DecentraSol/simple-todo/test-results/consent-screen-Consent-Scr-c44ed-equired-consent-information--iPhone-14-16-browserstack-mobile/test-failed-1.png
2025-08-19 15:22:05 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:22:05 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:22:05 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:22:05 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:22:08 - [32minfo[39m: getting screenshots results.
2025-08-19 15:22:08 - [32minfo[39m: [GrpcClient] Sending LogCreatedEvent
2025-08-19 15:22:08 - [32minfo[39m: [GrpcClient] LogCreatedEvent request successful
2025-08-19 15:22:08 - [32minfo[39m: [GrpcClient] Sending TestFrameworkEvent
2025-08-19 15:22:08 - [32minfo[39m: [GrpcClient] TestFrameworkEvent request successful
2025-08-19 15:22:08 - [32minfo[39m: [BrowserstackCLI] stop: CLI stop triggered
2025-08-19 15:22:08 - [32minfo[39m: [BrowserstackCLI] stop: CLI stop triggered
2025-08-19 15:22:08 - [32minfo[39m: [GrpcClient] Stopping bin session
2025-08-19 15:22:08 - [32minfo[39m: [GrpcClient] Stopping bin session
2025-08-19 15:22:15 - [32minfo[39m: [GrpcClient] StopBinSession successful
2025-08-19 15:22:15 - [32minfo[39m: [GrpcClient] StopBinSession successful
2025-08-19 15:22:15 - [32minfo[39m: [BrowserstackCLI] stop: stopBinSession build_link=https://automate.browserstack.com/dashboard/v2/builds/aadc34935cb3ee065407c613c0ecdd2afc28c981 hashed_id=aadc34935cb3ee065407c613c0ecdd2afc28c981 o11y_uuid=m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk
2025-08-19 15:22:15 - [32minfo[39m: [BrowserstackCLI] Unconfiguring modules
2025-08-19 15:22:15 - [32minfo[39m: [BrowserstackCLI] stop: channel closed
2025-08-19 15:22:15 - [32minfo[39m: [BrowserstackCLI] stop: stopBinSession build_link=https://automate.browserstack.com/dashboard/v2/builds/aadc34935cb3ee065407c613c0ecdd2afc28c981 hashed_id=aadc34935cb3ee065407c613c0ecdd2afc28c981 o11y_uuid=m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk
2025-08-19 15:22:15 - [32minfo[39m: [BrowserstackCLI] Unconfiguring modules
2025-08-19 15:22:15 - [32minfo[39m: [BrowserstackCLI] stop: channel closed
2025-08-19 15:22:20 - [32minfo[39m: [BrowserstackCLI] stop: shutting down CLI
2025-08-19 15:22:20 - [32minfo[39m: [BrowserstackCLI] stop: shutting down CLI
2025-08-19 15:22:20 - [32minfo[39m: [BrowserstackCLI] stop: CLI process exited
2025-08-19 15:22:20 - [32minfo[39m: [BrowserstackCLI] stop: CLI process exited
2025-08-19 15:22:20 - [32minfo[39m: Visit https://automation.browserstack.com/builds/m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk to view build report, insights, and many more debugging information all at one place!

2025-08-19 15:22:20 - [32minfo[39m: Visit https://automation.browserstack.com/builds/m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk to view build report, insights, and many more debugging information all at one place!

2025-08-19 15:22:20 - [32minfo[39m: SDK run ended for id: d50f1843-a423-4910-81a0-d6df68aba37b, testhub id: m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk
2025-08-19 15:22:20 - [32minfo[39m: SDK run ended for id: d50f1843-a423-4910-81a0-d6df68aba37b, testhub id: m6cx9gm1ce69czqidgf8slyshlkwy6yiut181jvk
2025-08-19 15:22:32 - [32minfo[39m: Deleting /Users/nandi/Documents/projekte/DecentraSol/simple-todo/playwright-browserstack-sdk.config.cjs
2025-08-19 15:22:32 - [32minfo[39m: Deleting /Users/nandi/Documents/projekte/DecentraSol/simple-todo/playwright-browserstack-sdk.config.cjs
2025-08-19 15:22:33 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
2025-08-19 15:22:33 - [32minfo[39m: [BrowserstackCLI] stop: CLI is not running, skipping stop
